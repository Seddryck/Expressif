{
  "Expressif.dll": {
    "C:\\projects\\expressif\\Expressif\\Context.cs": {
      "Expressif.Context": {
        "Expressif.Values.ContextVariables Expressif.Context::get_Variables()": {
          "Lines": {
            "12": 240
          },
          "Branches": []
        },
        "Expressif.Values.ContextObject Expressif.Context::get_CurrentObject()": {
          "Lines": {
            "13": 238
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\ExpressifException.cs": {
      "Expressif.ExpressifException": {
        "System.Void Expressif.ExpressifException::.ctor(System.String)": {
          "Lines": {
            "9": 27,
            "10": 27
          },
          "Branches": []
        }
      },
      "Expressif.NotImplementedFunctionException": {
        "System.Void Expressif.NotImplementedFunctionException::.ctor(System.String)": {
          "Lines": {
            "16": 6,
            "17": 6
          },
          "Branches": []
        }
      },
      "Expressif.MissingOrUnexpectedParametersFunctionException": {
        "System.Void Expressif.MissingOrUnexpectedParametersFunctionException::.ctor(System.String,System.Int32)": {
          "Lines": {
            "23": 11,
            "24": 11
          },
          "Branches": []
        }
      },
      "Expressif.InvalidIOException": {
        "System.Void Expressif.InvalidIOException::.ctor(System.String)": {
          "Lines": {
            "30": 0,
            "31": 0
          },
          "Branches": []
        }
      },
      "Expressif.VariableAlreadyExistingException": {
        "System.Void Expressif.VariableAlreadyExistingException::.ctor(System.String)": {
          "Lines": {
            "37": 4,
            "38": 4
          },
          "Branches": []
        }
      },
      "Expressif.UnexpectedVariableException": {
        "System.Void Expressif.UnexpectedVariableException::.ctor(System.String)": {
          "Lines": {
            "44": 0,
            "45": 0
          },
          "Branches": []
        }
      },
      "Expressif.NotIndexableContextObjectException": {
        "System.Void Expressif.NotIndexableContextObjectException::.ctor()": {
          "Lines": {
            "51": 4,
            "52": 4
          },
          "Branches": []
        }
      },
      "Expressif.NotNameableContextObjectException": {
        "System.Void Expressif.NotNameableContextObjectException::.ctor()": {
          "Lines": {
            "58": 2,
            "59": 2
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Expression.cs": {
      "Expressif.Expression": {
        "System.Object Expressif.Expression::Evaluate(System.Object)": {
          "Lines": {
            "22": 8
          },
          "Branches": []
        },
        "System.Void Expressif.Expression::.ctor(System.String)": {
          "Lines": {
            "16": 6
          },
          "Branches": []
        },
        "System.Void Expressif.Expression::.ctor(System.String,Expressif.Context)": {
          "Lines": {
            "18": 16
          },
          "Branches": []
        },
        "System.Void Expressif.Expression::.ctor(System.String,Expressif.Context,Expressif.Functions.ExpressionFactory)": {
          "Lines": {
            "19": 8,
            "20": 8
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\ExpressionBuilder.cs": {
      "Expressif.ExpressionBuilder": {
        "Expressif.Context Expressif.ExpressionBuilder::get_Context()": {
          "Lines": {
            "26": 17
          },
          "Branches": []
        },
        "Expressif.Functions.ExpressionFactory Expressif.ExpressionBuilder::get_Factory()": {
          "Lines": {
            "27": 17
          },
          "Branches": []
        },
        "Expressif.Functions.Serializer.ExpressionSerializer Expressif.ExpressionBuilder::get_Serializer()": {
          "Lines": {
            "28": 2
          },
          "Branches": []
        },
        "System.Collections.Generic.Queue`1<System.Object> Expressif.ExpressionBuilder::get_Pile()": {
          "Lines": {
            "35": 134
          },
          "Branches": []
        },
        "Expressif.ExpressionBuilder Expressif.ExpressionBuilder::Chain(System.Object[])": {
          "Lines": {
            "38": 20
          },
          "Branches": []
        },
        "Expressif.ExpressionBuilder Expressif.ExpressionBuilder::Chain(System.Type,System.Object[])": {
          "Lines": {
            "42": 23,
            "43": 0,
            "45": 23,
            "46": 23
          },
          "Branches": [
            {
              "Line": 42,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 21,
              "EndOffset": 112,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 23
            }
          ]
        },
        "Expressif.ExpressionBuilder Expressif.ExpressionBuilder::Chain(Expressif.ExpressionBuilder)": {
          "Lines": {
            "51": 1,
            "52": 1
          },
          "Branches": []
        },
        "Expressif.ExpressionBuilder Expressif.ExpressionBuilder::Chain(Expressif.Functions.IFunction)": {
          "Lines": {
            "57": 2,
            "58": 2
          },
          "Branches": []
        },
        "Expressif.Functions.IFunction Expressif.ExpressionBuilder::Build()": {
          "Lines": {
            "63": 11,
            "64": 11,
            "65": 1,
            "67": 30,
            "69": 20,
            "70": 20,
            "71": 17,
            "72": 1,
            "73": 2,
            "74": 0,
            "75": 20,
            "76": 20,
            "78": 10
          },
          "Branches": [
            {
              "Line": 64,
              "Offset": 13,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 67,
              "Offset": 162,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 20
            },
            {
              "Line": 69,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 3
            },
            {
              "Line": 69,
              "Offset": 57,
              "EndOffset": 59,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 69,
              "Offset": 46,
              "EndOffset": 74,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 17
            },
            {
              "Line": 69,
              "Offset": 57,
              "EndOffset": 96,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 69,
              "Offset": 70,
              "EndOffset": 106,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 2
            },
            {
              "Line": 69,
              "Offset": 70,
              "EndOffset": 112,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 76,
              "Offset": 122,
              "EndOffset": 124,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 10
            },
            {
              "Line": 76,
              "Offset": 122,
              "EndOffset": 149,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 10
            },
            {
              "Line": 64,
              "Offset": 13,
              "EndOffset": 151,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 30
            },
            {
              "Line": 67,
              "Offset": 162,
              "EndOffset": 167,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 10
            }
          ]
        },
        "System.String Expressif.ExpressionBuilder::Serialize()": {
          "Lines": {
            "83": 3,
            "84": 1,
            "86": 2
          },
          "Branches": [
            {
              "Line": 83,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 83,
              "Offset": 11,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        },
        "System.Void Expressif.ExpressionBuilder::.ctor()": {
          "Lines": {
            "31": 40
          },
          "Branches": []
        },
        "System.Void Expressif.ExpressionBuilder::.ctor(Expressif.Context,Expressif.Functions.ExpressionFactory,Expressif.Functions.Serializer.ExpressionSerializer)": {
          "Lines": {
            "32": 21,
            "33": 21
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 33,
              "Offset": 19,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 21
            },
            {
              "Line": 33,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 21
            },
            {
              "Line": 33,
              "Offset": 30,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 21
            },
            {
              "Line": 33,
              "Offset": 41,
              "EndOffset": 43,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 20
            },
            {
              "Line": 33,
              "Offset": 41,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 21
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predication.cs": {
      "Expressif.Predication": {
        "System.Boolean Expressif.Predication::Evaluate(System.Object)": {
          "Lines": {
            "22": 9
          },
          "Branches": []
        },
        "System.Object Expressif.Predication::Expressif.Functions.IFunction.Evaluate(System.Object)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Predication::.ctor(System.String)": {
          "Lines": {
            "16": 18
          },
          "Branches": []
        },
        "System.Void Expressif.Predication::.ctor(System.String,Expressif.Context)": {
          "Lines": {
            "18": 18
          },
          "Branches": []
        },
        "System.Void Expressif.Predication::.ctor(System.String,Expressif.Context,Expressif.Predicates.PredicationFactory)": {
          "Lines": {
            "19": 11,
            "20": 11
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\PredicationBuilder.cs": {
      "Expressif.PredicationBuilder": {
        "Expressif.Context Expressif.PredicationBuilder::get_Context()": {
          "Lines": {
            "17": 31
          },
          "Branches": []
        },
        "Expressif.Predicates.PredicationFactory Expressif.PredicationBuilder::get_Factory()": {
          "Lines": {
            "18": 31
          },
          "Branches": []
        },
        "Expressif.Predicates.Serializer.PredicationSerializer Expressif.PredicationBuilder::get_Serializer()": {
          "Lines": {
            "19": 4
          },
          "Branches": []
        },
        "System.Collections.Generic.Queue`1<System.Object> Expressif.PredicationBuilder::get_Pile()": {
          "Lines": {
            "26": 194
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Chain(System.Object[])": {
          "Lines": {
            "30": 16,
            "55": 7,
            "76": 3
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Ever(System.Object[])": {
          "Lines": {
            "34": 1
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Not(System.Object[])": {
          "Lines": {
            "38": 2
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::And(System.Object[])": {
          "Lines": {
            "42": 1,
            "60": 0
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Or(System.Object[])": {
          "Lines": {
            "46": 1,
            "65": 1
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Xor(System.Object[])": {
          "Lines": {
            "50": 1,
            "70": 0
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Chain(System.Type,System.Object[])": {
          "Lines": {
            "79": 2
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::And(System.Type,System.Object[])": {
          "Lines": {
            "82": 1
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Or(System.Type,System.Object[])": {
          "Lines": {
            "85": 1
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Xor(System.Type,System.Object[])": {
          "Lines": {
            "88": 1
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Chain(System.Type,System.Type,System.Object[])": {
          "Lines": {
            "91": 1
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Chain(System.Type,System.Type,System.Type,System.Object[])": {
          "Lines": {
            "94": 1
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::ChainWork(System.Type,System.Type,System.Object[])": {
          "Lines": {
            "97": 32
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::ChainWork(System.Type,System.Type,System.Type,System.Object[])": {
          "Lines": {
            "101": 39,
            "102": 0,
            "104": 39,
            "105": 0,
            "107": 39,
            "108": 0,
            "110": 39,
            "111": 39
          },
          "Branches": [
            {
              "Line": 101,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 19
            },
            {
              "Line": 101,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 101,
              "Offset": 7,
              "EndOffset": 121,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 39
            },
            {
              "Line": 101,
              "Offset": 30,
              "EndOffset": 121,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 39
            },
            {
              "Line": 104,
              "Offset": 128,
              "EndOffset": 130,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 39
            },
            {
              "Line": 104,
              "Offset": 151,
              "EndOffset": 153,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 104,
              "Offset": 128,
              "EndOffset": 242,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 39
            },
            {
              "Line": 104,
              "Offset": 151,
              "EndOffset": 242,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 39
            },
            {
              "Line": 107,
              "Offset": 263,
              "EndOffset": 265,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 107,
              "Offset": 263,
              "EndOffset": 354,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 39
            }
          ]
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Chain(Expressif.PredicationBuilder)": {
          "Lines": {
            "115": 2
          },
          "Branches": []
        },
        "Expressif.PredicationBuilder Expressif.PredicationBuilder::Chain(System.Type,Expressif.PredicationBuilder)": {
          "Lines": {
            "119": 2,
            "120": 2
          },
          "Branches": []
        },
        "Expressif.Predicates.IPredicate Expressif.PredicationBuilder::Build()": {
          "Lines": {
            "125": 16,
            "126": 16,
            "127": 1,
            "129": 46,
            "131": 31,
            "132": 31,
            "133": 31,
            "135": 31,
            "136": 30,
            "137": 1,
            "138": 1,
            "140": 0,
            "144": 31,
            "146": 15
          },
          "Branches": [
            {
              "Line": 126,
              "Offset": 13,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 129,
              "Offset": 168,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 31
            },
            {
              "Line": 135,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 30
            },
            {
              "Line": 135,
              "Offset": 50,
              "EndOffset": 86,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 137,
              "Offset": 96,
              "EndOffset": 98,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            },
            {
              "Line": 137,
              "Offset": 96,
              "EndOffset": 132,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 144,
              "Offset": 139,
              "EndOffset": 141,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 16
            },
            {
              "Line": 144,
              "Offset": 139,
              "EndOffset": 155,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 15
            },
            {
              "Line": 126,
              "Offset": 13,
              "EndOffset": 157,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 46
            },
            {
              "Line": 129,
              "Offset": 168,
              "EndOffset": 173,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 15
            }
          ]
        },
        "System.String Expressif.PredicationBuilder::Serialize()": {
          "Lines": {
            "151": 5,
            "152": 1,
            "154": 4
          },
          "Branches": [
            {
              "Line": 151,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 151,
              "Offset": 11,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            }
          ]
        },
        "System.Void Expressif.PredicationBuilder::.ctor()": {
          "Lines": {
            "22": 56
          },
          "Branches": []
        },
        "System.Void Expressif.PredicationBuilder::.ctor(Expressif.Context,Expressif.Predicates.PredicationFactory,Expressif.Predicates.Serializer.PredicationSerializer)": {
          "Lines": {
            "23": 29,
            "24": 29
          },
          "Branches": [
            {
              "Line": 24,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 24,
              "Offset": 19,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 29
            },
            {
              "Line": 24,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 29
            },
            {
              "Line": 24,
              "Offset": 30,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 29
            },
            {
              "Line": 24,
              "Offset": 41,
              "EndOffset": 43,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 28
            },
            {
              "Line": 24,
              "Offset": 41,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 29
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\StringExtensions.cs": {
      "Expressif.StringExtensions": {
        "System.String Expressif.StringExtensions::ToPascalCase(System.String)": {
          "Lines": {
            "15": 2285,
            "16": 2285,
            "17": 2285,
            "18": 2285
          },
          "Branches": []
        },
        "System.String Expressif.StringExtensions::ToKebabCase(System.String)": {
          "Lines": {
            "22": 26749,
            "23": 0,
            "25": 26749,
            "26": 26749,
            "27": 26749,
            "28": 26749,
            "30": 26749,
            "31": 26749,
            "33": 26749,
            "34": 472322,
            "36": 209412,
            "37": 19811,
            "38": 209412,
            "39": 209412,
            "42": 26749
          },
          "Branches": [
            {
              "Line": 22,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 6,
              "EndOffset": 14,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 26749
            },
            {
              "Line": 34,
              "Offset": 166,
              "EndOffset": 108,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 209412
            },
            {
              "Line": 36,
              "Offset": 121,
              "EndOffset": 123,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 19819
            },
            {
              "Line": 36,
              "Offset": 126,
              "EndOffset": 128,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 19814
            },
            {
              "Line": 36,
              "Offset": 134,
              "EndOffset": 136,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 19811
            },
            {
              "Line": 36,
              "Offset": 121,
              "EndOffset": 145,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 209412
            },
            {
              "Line": 36,
              "Offset": 126,
              "EndOffset": 145,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 209412
            },
            {
              "Line": 36,
              "Offset": 134,
              "EndOffset": 145,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 209412
            },
            {
              "Line": 34,
              "Offset": 166,
              "EndOffset": 168,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 26749
            }
          ]
        },
        "System.String Expressif.StringExtensions::ToKebabCase(System.Collections.Generic.IEnumerable`1<System.String>)": {
          "Lines": {
            "46": 0
          },
          "Branches": []
        },
        "System.String[] Expressif.StringExtensions::ToToken(System.String,System.Char)": {
          "Lines": {
            "49": 11305,
            "50": 11305,
            "51": 11305
          },
          "Branches": [
            {
              "Line": 49,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 11305
            },
            {
              "Line": 49,
              "Offset": 6,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\ContextObject.cs": {
      "Expressif.Values.ContextObject": {
        "System.Object Expressif.Values.ContextObject::get_Value()": {
          "Lines": {
            "13": 180
          },
          "Branches": []
        },
        "System.Reflection.PropertyInfo[] Expressif.Values.ContextObject::get_Cache()": {
          "Lines": {
            "14": 71
          },
          "Branches": []
        },
        "System.Void Expressif.Values.ContextObject::Set(System.Object)": {
          "Lines": {
            "18": 22,
            "19": 22,
            "20": 22,
            "21": 22
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 22
            },
            {
              "Line": 18,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 22
            },
            {
              "Line": 18,
              "Offset": 30,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 22
            }
          ]
        },
        "System.Boolean Expressif.Values.ContextObject::Exists(System.String)": {
          "Lines": {
            "24": 13,
            "25": 13,
            "26": 4,
            "27": 4,
            "28": 1,
            "29": 4,
            "30": 13
          },
          "Branches": [
            {
              "Line": 24,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 9
            },
            {
              "Line": 24,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 5
            },
            {
              "Line": 24,
              "Offset": 15,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            },
            {
              "Line": 24,
              "Offset": 25,
              "EndOffset": 57,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 4
            },
            {
              "Line": 24,
              "Offset": 33,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 24,
              "Offset": 33,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 4
            }
          ]
        },
        "System.Object Expressif.Values.ContextObject::get_Item(System.String)": {
          "Lines": {
            "36": 27,
            "37": 27,
            "38": 4,
            "39": 4,
            "40": 1,
            "41": 18,
            "42": 27
          },
          "Branches": [
            {
              "Line": 36,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 23
            },
            {
              "Line": 36,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 19
            },
            {
              "Line": 36,
              "Offset": 15,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            },
            {
              "Line": 38,
              "Offset": 54,
              "EndOffset": 56,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 1
            },
            {
              "Line": 38,
              "Offset": 54,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 3
            },
            {
              "Line": 36,
              "Offset": 25,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 4
            },
            {
              "Line": 39,
              "Offset": 80,
              "EndOffset": 82,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 1
            },
            {
              "Line": 39,
              "Offset": 80,
              "EndOffset": 89,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 3
            },
            {
              "Line": 36,
              "Offset": 33,
              "EndOffset": 99,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 36,
              "Offset": 33,
              "EndOffset": 105,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 18
            }
          ]
        },
        "System.Boolean Expressif.Values.ContextObject::Exists(System.Int32)": {
          "Lines": {
            "55": 10,
            "56": 10,
            "57": 4,
            "58": 4,
            "59": 2,
            "60": 10
          },
          "Branches": [
            {
              "Line": 55,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 55,
              "Offset": 15,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            },
            {
              "Line": 55,
              "Offset": 25,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 4
            },
            {
              "Line": 55,
              "Offset": 25,
              "EndOffset": 63,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            }
          ]
        },
        "System.Object Expressif.Values.ContextObject::get_Item(System.Int32)": {
          "Lines": {
            "66": 39,
            "67": 39,
            "68": 4,
            "69": 33,
            "70": 2,
            "71": 39
          },
          "Branches": [
            {
              "Line": 66,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 35
            },
            {
              "Line": 66,
              "Offset": 15,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            },
            {
              "Line": 68,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            },
            {
              "Line": 68,
              "Offset": 46,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 3
            },
            {
              "Line": 66,
              "Offset": 25,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 33
            },
            {
              "Line": 66,
              "Offset": 25,
              "EndOffset": 81,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            }
          ]
        },
        "System.ValueTuple`2<System.Boolean,System.Object> Expressif.Values.ContextObject::RetrieveObjectProperty(System.String)": {
          "Lines": {
            "77": 22,
            "78": 0,
            "80": 22,
            "82": 22,
            "83": 24,
            "84": 24,
            "85": 22,
            "87": 22
          },
          "Branches": [
            {
              "Line": 77,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 77,
              "Offset": 19,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 22
            },
            {
              "Line": 80,
              "Offset": 35,
              "EndOffset": 37,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 5
            },
            {
              "Line": 80,
              "Offset": 35,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 22
            },
            {
              "Line": 87,
              "Offset": 92,
              "EndOffset": 94,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 20
            },
            {
              "Line": 87,
              "Offset": 92,
              "EndOffset": 113,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2
            },
            {
              "Line": 83,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 20
            },
            {
              "Line": 83,
              "Offset": 18,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            }
          ]
        },
        "System.Object Expressif.Values.ContextObject::<get_Item>g__retrieveObjectProperty|11_0(System.String)": {
          "Lines": {
            "46": 18,
            "47": 18,
            "48": 17,
            "49": 1
          },
          "Branches": [
            {
              "Line": 47,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 17
            },
            {
              "Line": 47,
              "Offset": 14,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\ContextVariables.cs": {
      "Expressif.Values.ContextVariables": {
        "System.Collections.Generic.IDictionary`2<System.String,Expressif.Values.IScalarResolver> Expressif.Values.ContextVariables::get_Variables()": {
          "Lines": {
            "12": 311
          },
          "Branches": []
        },
        "System.Void Expressif.Values.ContextVariables::Add(System.String,Expressif.Values.IScalarResolver)": {
          "Lines": {
            "16": 18,
            "17": 18,
            "18": 4,
            "19": 14,
            "20": 14
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 13
            },
            {
              "Line": 16,
              "Offset": 11,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 5
            },
            {
              "Line": 17,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 4
            },
            {
              "Line": 17,
              "Offset": 47,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 14
            }
          ]
        },
        "System.Void Expressif.Values.ContextVariables::Add(System.String,System.Object)": {
          "Lines": {
            "23": 18
          },
          "Branches": []
        },
        "System.Void Expressif.Values.ContextVariables::Set(System.String,Expressif.Values.IScalarResolver)": {
          "Lines": {
            "27": 12,
            "28": 12,
            "29": 4,
            "31": 8,
            "32": 8
          },
          "Branches": [
            {
              "Line": 27,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 27,
              "Offset": 11,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6
            },
            {
              "Line": 28,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 4
            },
            {
              "Line": 28,
              "Offset": 47,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 8
            }
          ]
        },
        "System.Void Expressif.Values.ContextVariables::Set(System.String,System.Object)": {
          "Lines": {
            "35": 12
          },
          "Branches": []
        },
        "System.Void Expressif.Values.ContextVariables::Remove(System.String)": {
          "Lines": {
            "39": 4,
            "40": 4,
            "41": 4,
            "42": 4
          },
          "Branches": [
            {
              "Line": 39,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 39,
              "Offset": 11,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 40,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 4
            },
            {
              "Line": 40,
              "Offset": 47,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 4
            }
          ]
        },
        "System.Int32 Expressif.Values.ContextVariables::get_Count()": {
          "Lines": {
            "44": 28
          },
          "Branches": []
        },
        "System.Object Expressif.Values.ContextVariables::get_Item(System.String)": {
          "Lines": {
            "50": 29,
            "51": 29,
            "52": 29,
            "53": 0
          },
          "Branches": [
            {
              "Line": 50,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 26
            },
            {
              "Line": 50,
              "Offset": 11,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 51,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 29
            },
            {
              "Line": 51,
              "Offset": 47,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Interval.cs": {
      "Expressif.Values.Interval`1": {
        "T Expressif.Values.Interval`1::get_LowerBound()": {
          "Lines": {
            "16": 8
          },
          "Branches": []
        },
        "T Expressif.Values.Interval`1::get_UpperBound()": {
          "Lines": {
            "17": 8
          },
          "Branches": []
        },
        "Expressif.Values.IntervalType Expressif.Values.Interval`1::get_LowerBoundIntervalType()": {
          "Lines": {
            "19": 8
          },
          "Branches": []
        },
        "Expressif.Values.IntervalType Expressif.Values.Interval`1::get_UpperBoundIntervalType()": {
          "Lines": {
            "20": 8
          },
          "Branches": []
        },
        "System.Boolean Expressif.Values.Interval`1::Contains(T)": {
          "Lines": {
            "52": 8,
            "53": 8,
            "54": 8,
            "55": 8,
            "56": 8,
            "57": 8,
            "59": 8
          },
          "Branches": [
            {
              "Line": 52,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 52,
              "Offset": 6,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 7
            },
            {
              "Line": 55,
              "Offset": 77,
              "EndOffset": 79,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 7
            },
            {
              "Line": 55,
              "Offset": 77,
              "EndOffset": 113,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            }
          ]
        },
        "System.String Expressif.Values.Interval`1::ToString()": {
          "Lines": {
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0
          },
          "Branches": [
            {
              "Line": 69,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 19,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 70,
              "EndOffset": 72,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 70,
              "EndOffset": 79,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void Expressif.Values.Interval`1::.ctor(T,T,Expressif.Values.IntervalType,Expressif.Values.IntervalType)": {
          "Lines": {
            "27": 15,
            "29": 15,
            "30": 15,
            "31": 15,
            "33": 15,
            "35": 2,
            "36": 2,
            "39": 15,
            "40": 15,
            "41": 15,
            "42": 15,
            "43": 15
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 33,
              "Offset": 31,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 15
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\IntervalBuilder.cs": {
      "Expressif.Values.IntervalBuilder": {
        "Expressif.Values.IInterval Expressif.Values.IntervalBuilder::Create(System.Char,System.String,System.String,System.Char)": {
          "Lines": {
            "17": 10,
            "18": 10,
            "20": 10,
            "22": 4,
            "23": 4,
            "25": 6,
            "26": 6,
            "27": 6,
            "28": 6,
            "30": 2,
            "31": 2,
            "33": 4
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 17,
              "Offset": 3,
              "EndOffset": 8,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 9
            },
            {
              "Line": 18,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 14,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 10
            },
            {
              "Line": 20,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 6
            },
            {
              "Line": 20,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 4
            },
            {
              "Line": 20,
              "Offset": 32,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 6
            },
            {
              "Line": 20,
              "Offset": 45,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 6
            },
            {
              "Line": 25,
              "Offset": 91,
              "EndOffset": 93,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 1
            },
            {
              "Line": 25,
              "Offset": 91,
              "EndOffset": 106,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 5
            },
            {
              "Line": 25,
              "Offset": 104,
              "EndOffset": 106,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 5
            },
            {
              "Line": 25,
              "Offset": 117,
              "EndOffset": 119,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 2
            },
            {
              "Line": 25,
              "Offset": 104,
              "EndOffset": 132,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 2
            },
            {
              "Line": 25,
              "Offset": 130,
              "EndOffset": 132,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 2
            },
            {
              "Line": 25,
              "Offset": 117,
              "EndOffset": 165,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 4
            },
            {
              "Line": 25,
              "Offset": 130,
              "EndOffset": 165,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 4
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Special\\Any.cs": {
      "Expressif.Values.Special.Any": {
        "System.Boolean Expressif.Values.Special.Any::Equals(System.Object)": {
          "Lines": {
            "21": 31
          },
          "Branches": []
        },
        "System.Int32 Expressif.Values.Special.Any::GetHashCode()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Any::.ctor()": {
          "Lines": {
            "13": 114
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Any::.ctor(System.String)": {
          "Lines": {
            "16": 114
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Special\\BaseSpecial.cs": {
      "Expressif.Values.Special.BaseSpecial": {
        "System.String Expressif.Values.Special.BaseSpecial::get_Keyword()": {
          "Lines": {
            "9": 2304
          },
          "Branches": []
        },
        "System.Boolean Expressif.Values.Special.BaseSpecial::AdvancedMatch(System.String)": {
          "Lines": {
            "15": 2140
          },
          "Branches": []
        },
        "System.Boolean Expressif.Values.Special.BaseSpecial::op_Equality(Expressif.Values.Special.BaseSpecial,System.Object)": {
          "Lines": {
            "18": 27
          },
          "Branches": []
        },
        "System.Boolean Expressif.Values.Special.BaseSpecial::op_Inequality(Expressif.Values.Special.BaseSpecial,System.Object)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean Expressif.Values.Special.BaseSpecial::Equals(System.Object)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Int32 Expressif.Values.Special.BaseSpecial::GetHashCode()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.BaseSpecial::.ctor(System.String)": {
          "Lines": {
            "11": 2821,
            "12": 2821
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Special\\Empty.cs": {
      "Expressif.Values.Special.Empty": {
        "System.Boolean Expressif.Values.Special.Empty::Equals(System.Object)": {
          "Lines": {
            "19": 838,
            "20": 838,
            "21": 0,
            "22": 745,
            "23": 93,
            "24": 838
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 838
            },
            {
              "Line": 19,
              "Offset": 6,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 16,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 745
            },
            {
              "Line": 22,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 686
            },
            {
              "Line": 22,
              "Offset": 30,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 59
            },
            {
              "Line": 19,
              "Offset": 16,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 93
            }
          ]
        },
        "System.Int32 Expressif.Values.Special.Empty::GetHashCode()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Empty::.ctor()": {
          "Lines": {
            "13": 1774
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Empty::.ctor(System.String)": {
          "Lines": {
            "16": 1774
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Special\\Null.cs": {
      "Expressif.Values.Special.Null": {
        "System.Boolean Expressif.Values.Special.Null::Equals(System.Object)": {
          "Lines": {
            "18": 1095,
            "19": 1095,
            "20": 3,
            "21": 2,
            "22": 2,
            "23": 923,
            "24": 165,
            "25": 1095
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1092
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1090
            },
            {
              "Line": 18,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1088
            },
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 18,
              "Offset": 17,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2
            },
            {
              "Line": 18,
              "Offset": 27,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 923
            },
            {
              "Line": 18,
              "Offset": 27,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 165
            }
          ]
        },
        "System.Int32 Expressif.Values.Special.Null::GetHashCode()": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Null::.ctor()": {
          "Lines": {
            "12": 2318
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Null::.ctor(System.String)": {
          "Lines": {
            "15": 2318
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Special\\Value.cs": {
      "Expressif.Values.Special.Value": {
        "System.Boolean Expressif.Values.Special.Value::Equals(System.Object)": {
          "Lines": {
            "19": 29,
            "20": 29,
            "21": 0,
            "22": 2,
            "23": 0,
            "24": 27,
            "25": 0,
            "26": 29
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 29
            },
            {
              "Line": 19,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 27
            },
            {
              "Line": 19,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 27
            },
            {
              "Line": 19,
              "Offset": 6,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 9,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 19,
              "Offset": 17,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 27,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 27
            },
            {
              "Line": 19,
              "Offset": 27,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Expressif.Values.Special.Value::AdvancedMatch(System.String)": {
          "Lines": {
            "30": 27
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 10
            },
            {
              "Line": 30,
              "Offset": 7,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 17
            }
          ]
        },
        "System.Int32 Expressif.Values.Special.Value::GetHashCode()": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Value::.ctor()": {
          "Lines": {
            "13": 112
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Value::.ctor(System.String)": {
          "Lines": {
            "16": 112
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Special\\Whitespace.cs": {
      "Expressif.Values.Special.Whitespace": {
        "System.Boolean Expressif.Values.Special.Whitespace::Equals(System.Object)": {
          "Lines": {
            "18": 647,
            "19": 647,
            "20": 0,
            "21": 554,
            "22": 93,
            "23": 647
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 647
            },
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 16,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 554
            },
            {
              "Line": 21,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 504
            },
            {
              "Line": 21,
              "Offset": 30,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 50
            },
            {
              "Line": 18,
              "Offset": 16,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 93
            }
          ]
        },
        "System.Int32 Expressif.Values.Special.Whitespace::GetHashCode()": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Whitespace::.ctor()": {
          "Lines": {
            "12": 1324
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Special.Whitespace::.ctor(System.String)": {
          "Lines": {
            "15": 1324
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Resolvers\\InputExpressionResolver.cs": {
      "Expressif.Values.Resolvers.InputExpressionResolver`1": {
        "Expressif.Functions.IFunction Expressif.Values.Resolvers.InputExpressionResolver`1::get_Expression()": {
          "Lines": {
            "13": 6
          },
          "Branches": []
        },
        "System.Func`1<System.Object> Expressif.Values.Resolvers.InputExpressionResolver`1::get_Argument()": {
          "Lines": {
            "14": 6
          },
          "Branches": []
        },
        "T Expressif.Values.Resolvers.InputExpressionResolver`1::Execute()": {
          "Lines": {
            "19": 6
          },
          "Branches": []
        },
        "System.Object Expressif.Values.Resolvers.InputExpressionResolver`1::Expressif.Values.IScalarResolver.Execute()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Resolvers.InputExpressionResolver`1::.ctor(System.Func`1<System.Object>,Expressif.Functions.IFunction)": {
          "Lines": {
            "16": 5,
            "17": 5
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Resolvers\\IntervalResolver.cs": {
      "Expressif.Values.Resolvers.IntervalResolver`1": {
        "T Expressif.Values.Resolvers.IntervalResolver`1::Execute()": {
          "Lines": {
            "15": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Values.Resolvers.IntervalResolver`1::Expressif.Values.IScalarResolver.Execute()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Resolvers.IntervalResolver`1::.ctor(System.Object)": {
          "Lines": {
            "12": 1,
            "13": 1
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Resolvers\\LiteralScalarResolver.cs": {
      "Expressif.Values.Resolvers.LiteralScalarResolver`1": {
        "T Expressif.Values.Resolvers.LiteralScalarResolver`1::Execute()": {
          "Lines": {
            "14": 193
          },
          "Branches": []
        },
        "System.Object Expressif.Values.Resolvers.LiteralScalarResolver`1::Expressif.Values.IScalarResolver.Execute()": {
          "Lines": {
            "17": 29
          },
          "Branches": []
        },
        "T Expressif.Values.Resolvers.LiteralScalarResolver`1::ConvertValue(System.Object)": {
          "Lines": {
            "21": 193,
            "23": 193,
            "25": 172,
            "26": 0,
            "27": 0,
            "30": 21,
            "31": 0,
            "32": 0,
            "33": 193
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 172
            },
            {
              "Line": 23,
              "Offset": 28,
              "EndOffset": 144,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 21
            }
          ]
        },
        "System.Void Expressif.Values.Resolvers.LiteralScalarResolver`1::.ctor(System.Object)": {
          "Lines": {
            "10": 90,
            "11": 90
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Resolvers\\ObjectIndexResolver.cs": {
      "Expressif.Values.Resolvers.ObjectIndexResolver`1": {
        "System.Int32 Expressif.Values.Resolvers.ObjectIndexResolver`1::get_Index()": {
          "Lines": {
            "13": 28
          },
          "Branches": []
        },
        "Expressif.Values.ContextObject Expressif.Values.Resolvers.ObjectIndexResolver`1::get_Object()": {
          "Lines": {
            "14": 28
          },
          "Branches": []
        },
        "T Expressif.Values.Resolvers.ObjectIndexResolver`1::Execute()": {
          "Lines": {
            "19": 28
          },
          "Branches": []
        },
        "System.Object Expressif.Values.Resolvers.ObjectIndexResolver`1::Expressif.Values.IScalarResolver.Execute()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Resolvers.ObjectIndexResolver`1::.ctor(System.Int32,Expressif.Values.ContextObject)": {
          "Lines": {
            "16": 5,
            "17": 5
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Resolvers\\ObjectPropertyResolver.cs": {
      "Expressif.Values.Resolvers.ObjectPropertyResolver`1": {
        "System.String Expressif.Values.Resolvers.ObjectPropertyResolver`1::get_PropertyName()": {
          "Lines": {
            "13": 14
          },
          "Branches": []
        },
        "Expressif.Values.ContextObject Expressif.Values.Resolvers.ObjectPropertyResolver`1::get_Object()": {
          "Lines": {
            "14": 14
          },
          "Branches": []
        },
        "T Expressif.Values.Resolvers.ObjectPropertyResolver`1::Execute()": {
          "Lines": {
            "19": 14
          },
          "Branches": []
        },
        "System.Object Expressif.Values.Resolvers.ObjectPropertyResolver`1::Expressif.Values.IScalarResolver.Execute()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Resolvers.ObjectPropertyResolver`1::.ctor(System.String,Expressif.Values.ContextObject)": {
          "Lines": {
            "16": 3,
            "17": 3
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Resolvers\\VariableScalarResolver.cs": {
      "Expressif.Values.Resolvers.VariableScalarResolver`1": {
        "System.String Expressif.Values.Resolvers.VariableScalarResolver`1::get_Name()": {
          "Lines": {
            "9": 20
          },
          "Branches": []
        },
        "Expressif.Values.ContextVariables Expressif.Values.Resolvers.VariableScalarResolver`1::get_Variables()": {
          "Lines": {
            "10": 20
          },
          "Branches": []
        },
        "T Expressif.Values.Resolvers.VariableScalarResolver`1::Execute()": {
          "Lines": {
            "15": 20
          },
          "Branches": []
        },
        "System.Object Expressif.Values.Resolvers.VariableScalarResolver`1::Expressif.Values.IScalarResolver.Execute()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Values.Resolvers.VariableScalarResolver`1::.ctor(System.String,Expressif.Values.ContextVariables)": {
          "Lines": {
            "12": 8,
            "13": 8
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Casters\\BooleanCaster.cs": {
      "Expressif.Values.Casters.BooleanCaster": {
        "System.Boolean Expressif.Values.Casters.BooleanCaster::Execute(System.Object)": {
          "Lines": {
            "14": 55,
            "15": 0,
            "17": 55,
            "18": 24,
            "20": 31
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 6,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 55
            },
            {
              "Line": 17,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 24
            },
            {
              "Line": 18,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 38,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 24
            },
            {
              "Line": 17,
              "Offset": 26,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 31
            }
          ]
        },
        "System.Boolean Expressif.Values.Casters.BooleanCaster::TryParseNumeric(System.Object,System.Nullable`1<System.Decimal>&)": {
          "Lines": {
            "25": 55,
            "26": 55,
            "27": 24,
            "29": 31,
            "30": 55
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 24
            },
            {
              "Line": 26,
              "Offset": 13,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 31
            }
          ]
        },
        "System.Boolean Expressif.Values.Casters.BooleanCaster::Cast(System.Decimal)": {
          "Lines": {
            "34": 24
          },
          "Branches": []
        },
        "System.Boolean Expressif.Values.Casters.BooleanCaster::Cast(System.String)": {
          "Lines": {
            "37": 31,
            "38": 31,
            "39": 6,
            "40": 6,
            "41": 0,
            "42": 19,
            "43": 31
          },
          "Branches": [
            {
              "Line": 37,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 1,
              "EndOffset": 6,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 31
            },
            {
              "Line": 37,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 25
            },
            {
              "Line": 37,
              "Offset": 42,
              "EndOffset": 44,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 19
            },
            {
              "Line": 37,
              "Offset": 29,
              "EndOffset": 59,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 6
            },
            {
              "Line": 37,
              "Offset": 42,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 6
            },
            {
              "Line": 37,
              "Offset": 55,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 55,
              "EndOffset": 71,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 19
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Casters\\Caster.cs": {
      "Expressif.Values.Casters.Caster": {
        "T Expressif.Values.Casters.Caster::Cast(System.Object)": {
          "Lines": {
            "13": 68,
            "14": 0,
            "16": 68,
            "17": 7,
            "18": 0,
            "19": 0,
            "20": 68,
            "22": 68,
            "23": 7,
            "26": 61,
            "27": 0,
            "28": 0,
            "29": 61
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 19,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 68
            },
            {
              "Line": 22,
              "Offset": 137,
              "EndOffset": 139,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 7
            },
            {
              "Line": 22,
              "Offset": 137,
              "EndOffset": 151,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 61
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Casters\\DateTimeCaster.cs": {
      "Expressif.Values.Casters.DateTimeCaster": {
        "System.DateTime Expressif.Values.Casters.DateTimeCaster::Execute(System.Object)": {
          "Lines": {
            "12": 118
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Casters\\NumericCaster.cs": {
      "Expressif.Values.Casters.NumericCaster": {
        "System.Decimal Expressif.Values.Casters.NumericCaster::Execute(System.Object)": {
          "Lines": {
            "12": 190
          },
          "Branches": []
        },
        "System.Boolean Expressif.Values.Casters.NumericCaster::IsNumericType(System.Object)": {
          "Lines": {
            "15": 80,
            "16": 80,
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 21,
            "21": 1,
            "22": 80,
            "23": 1,
            "24": 80,
            "25": 1,
            "26": 1,
            "27": 1,
            "28": 80,
            "29": 1,
            "30": 1,
            "31": 80,
            "32": 1,
            "33": 9,
            "34": 1,
            "35": 38,
            "36": 80
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 79
            },
            {
              "Line": 15,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 78
            },
            {
              "Line": 15,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 77
            },
            {
              "Line": 15,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 56
            },
            {
              "Line": 15,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 55
            },
            {
              "Line": 15,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 54
            },
            {
              "Line": 15,
              "Offset": 54,
              "EndOffset": 56,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 53
            },
            {
              "Line": 15,
              "Offset": 62,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 52
            },
            {
              "Line": 15,
              "Offset": 70,
              "EndOffset": 72,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 51
            },
            {
              "Line": 15,
              "Offset": 78,
              "EndOffset": 80,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 50
            },
            {
              "Line": 15,
              "Offset": 86,
              "EndOffset": 88,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 49
            },
            {
              "Line": 15,
              "Offset": 94,
              "EndOffset": 96,
              "Path": 0,
              "Ordinal": 22,
              "Hits": 48
            },
            {
              "Line": 15,
              "Offset": 102,
              "EndOffset": 104,
              "Path": 0,
              "Ordinal": 24,
              "Hits": 39
            },
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 114,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 14,
              "EndOffset": 118,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 22,
              "EndOffset": 122,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 30,
              "EndOffset": 126,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 21
            },
            {
              "Line": 15,
              "Offset": 38,
              "EndOffset": 130,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 46,
              "EndOffset": 134,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 54,
              "EndOffset": 138,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 62,
              "EndOffset": 142,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 70,
              "EndOffset": 146,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 78,
              "EndOffset": 150,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 86,
              "EndOffset": 154,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 94,
              "EndOffset": 158,
              "Path": 1,
              "Ordinal": 23,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 102,
              "EndOffset": 162,
              "Path": 1,
              "Ordinal": 25,
              "Hits": 9
            },
            {
              "Line": 15,
              "Offset": 110,
              "EndOffset": 166,
              "Path": 1,
              "Ordinal": 27,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 110,
              "EndOffset": 170,
              "Path": 0,
              "Ordinal": 26,
              "Hits": 38
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Values\\Casters\\TextCaster.cs": {
      "Expressif.Values.Casters.TextCaster": {
        "System.String Expressif.Values.Casters.TextCaster::Execute(System.Object)": {
          "Lines": {
            "11": 7
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 7,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 7
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\BasePredicate.cs": {
      "Expressif.Predicates.BasePredicate": {
        "System.Boolean Expressif.Predicates.BasePredicate::EvaluateNull()": {
          "Lines": {
            "17": 49
          },
          "Branches": []
        },
        "System.Object Expressif.Predicates.BasePredicate::Expressif.Functions.IFunction.Evaluate(System.Object)": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.BasePredicate::.ctor()": {
          "Lines": {
            "15": 1150
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\ChainPredicate.cs": {
      "Expressif.Predicates.ChainPredicate": {
        "System.Collections.Generic.IEnumerable`1<Expressif.Predicates.IPredicate> Expressif.Predicates.ChainPredicate::get_Predicates()": {
          "Lines": {
            "14": 16
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.ChainPredicate::Evaluate(System.Object)": {
          "Lines": {
            "20": 35
          },
          "Branches": [
            {
              "Line": 20,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 16
            },
            {
              "Line": 20,
              "Offset": 14,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Object Expressif.Predicates.ChainPredicate::Expressif.Functions.IFunction.Evaluate(System.Object)": {
          "Lines": {
            "22": 1
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.ChainPredicate::.ctor(System.Collections.Generic.IEnumerable`1<Expressif.Predicates.IPredicate>)": {
          "Lines": {
            "16": 19,
            "17": 19
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\CombinedPredicate.cs": {
      "Expressif.Predicates.CombinedPredicate": {
        "Expressif.Predicates.IPredicate Expressif.Predicates.CombinedPredicate::get_LeftMember()": {
          "Lines": {
            "14": 23
          },
          "Branches": []
        },
        "Expressif.Predicates.Combination.ICombinationOperator Expressif.Predicates.CombinedPredicate::get_Operator()": {
          "Lines": {
            "15": 23
          },
          "Branches": []
        },
        "Expressif.Predicates.IPredicate Expressif.Predicates.CombinedPredicate::get_RightMember()": {
          "Lines": {
            "16": 23
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.CombinedPredicate::Evaluate(System.Object)": {
          "Lines": {
            "22": 23
          },
          "Branches": []
        },
        "System.Object Expressif.Predicates.CombinedPredicate::Expressif.Functions.IFunction.Evaluate(System.Object)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.CombinedPredicate::.ctor(Expressif.Predicates.IPredicate,Expressif.Predicates.Combination.ICombinationOperator,Expressif.Predicates.IPredicate)": {
          "Lines": {
            "18": 24,
            "19": 24
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\PredicateAttribute.cs": {
      "Expressif.Predicates.PredicateAttribute": {
        "System.Boolean Expressif.Predicates.PredicateAttribute::get_AppendIs()": {
          "Lines": {
            "12": 3124
          },
          "Branches": []
        },
        "System.String[] Expressif.Predicates.PredicateAttribute::get_Aliases()": {
          "Lines": {
            "13": 3124
          },
          "Branches": []
        },
        "System.String Expressif.Predicates.PredicateAttribute::get_Prefix()": {
          "Lines": {
            "14": 7526
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.PredicateAttribute::.ctor()": {
          "Lines": {
            "17": 7384
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.PredicateAttribute::.ctor(System.Boolean)": {
          "Lines": {
            "20": 2272
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.PredicateAttribute::.ctor(System.String[])": {
          "Lines": {
            "23": 7384
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.PredicateAttribute::.ctor(System.Boolean,System.String,System.String[])": {
          "Lines": {
            "25": 6248,
            "26": 6248
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1420
            },
            {
              "Line": 26,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6248
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\PredicationFactory.cs": {
      "Expressif.Predicates.PredicationFactory": {
        "Sprache.Parser`1<Expressif.Parsers.IPredication> Expressif.Predicates.PredicationFactory::get_Parser()": {
          "Lines": {
            "19": 77
          },
          "Branches": []
        },
        "Expressif.Predicates.IPredicate Expressif.Predicates.PredicationFactory::Instantiate(System.String,Expressif.Context)": {
          "Lines": {
            "23": 9,
            "24": 9,
            "25": 9
          },
          "Branches": []
        },
        "Expressif.Predicates.IPredicate Expressif.Predicates.PredicationFactory::Instantiate(Expressif.Parsers.IPredication,Expressif.Context)": {
          "Lines": {
            "29": 25,
            "30": 25,
            "31": 17,
            "32": 8,
            "33": 0,
            "34": 25
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 8
            },
            {
              "Line": 29,
              "Offset": 8,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 17
            },
            {
              "Line": 29,
              "Offset": 18,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 8
            },
            {
              "Line": 29,
              "Offset": 18,
              "EndOffset": 84,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "Expressif.Predicates.IPredicate Expressif.Predicates.PredicationFactory::Instantiate(Expressif.Parsers.BasicPredication,Expressif.Context)": {
          "Lines": {
            "38": 17,
            "39": 70,
            "40": 18,
            "41": 17
          },
          "Branches": [
            {
              "Line": 39,
              "Offset": 54,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 18
            },
            {
              "Line": 39,
              "Offset": 54,
              "EndOffset": 56,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 17
            }
          ]
        },
        "Expressif.Predicates.Combination.ICombinationOperator Expressif.Predicates.PredicationFactory::Instantiate(System.String)": {
          "Lines": {
            "45": 8
          },
          "Branches": []
        },
        "T Expressif.Predicates.PredicationFactory::Instantiate(System.Type)": {
          "Lines": {
            "48": 54
          },
          "Branches": []
        },
        "Expressif.Predicates.IPredicate Expressif.Predicates.PredicationFactory::Instantiate(System.Type,Expressif.Parsers.IParameter[],Expressif.Context)": {
          "Lines": {
            "51": 4
          },
          "Branches": []
        },
        "Expressif.Predicates.IPredicate Expressif.Predicates.PredicationFactory::Instantiate(System.Type,System.Type,Expressif.Parsers.IParameter[],Expressif.Context)": {
          "Lines": {
            "55": 30,
            "56": 30,
            "57": 30,
            "58": 30,
            "59": 5,
            "60": 25,
            "61": 30
          },
          "Branches": [
            {
              "Line": 57,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 5
            },
            {
              "Line": 57,
              "Offset": 23,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 25
            }
          ]
        },
        "System.Collections.Generic.IDictionary`2<System.String,System.Type> Expressif.Predicates.PredicationFactory::Initialize()": {
          "Lines": {
            "66": 21,
            "67": 21,
            "68": 21,
            "69": 1890,
            "71": 924,
            "72": 3696,
            "73": 924,
            "75": 21
          },
          "Branches": [
            {
              "Line": 69,
              "Offset": 100,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 924
            },
            {
              "Line": 72,
              "Offset": 92,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 924
            },
            {
              "Line": 72,
              "Offset": 92,
              "EndOffset": 94,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 945
            },
            {
              "Line": 69,
              "Offset": 100,
              "EndOffset": 102,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 21
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\PredicationMember.cs": {
      "Expressif.Predicates.PredicationMember": {
        "System.Type Expressif.Predicates.PredicationMember::get_Operator()": {
          "Lines": {
            "14": 513
          },
          "Branches": []
        },
        "System.ValueTuple`2<Expressif.Predicates.Combination.ICombinationOperator,Expressif.Predicates.IPredicate> Expressif.Predicates.PredicationMember::Build(Expressif.Context,Expressif.Predicates.PredicationFactory)": {
          "Lines": {
            "24": 30,
            "25": 114,
            "27": 27,
            "28": 27,
            "29": 0,
            "30": 27,
            "31": 27,
            "33": 30,
            "34": 30,
            "35": 30
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 96,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 27
            },
            {
              "Line": 27,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 36,
              "EndOffset": 44,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 27
            },
            {
              "Line": 30,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 46,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 27
            },
            {
              "Line": 30,
              "Offset": 59,
              "EndOffset": 61,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 59,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 27
            },
            {
              "Line": 25,
              "Offset": 96,
              "EndOffset": 98,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 30
            },
            {
              "Line": 33,
              "Offset": 110,
              "EndOffset": 112,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 15
            },
            {
              "Line": 33,
              "Offset": 110,
              "EndOffset": 126,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 15
            }
          ]
        },
        "System.Void Expressif.Predicates.PredicationMember::.ctor(System.Type,System.Type,System.Type,System.Object[])": {
          "Lines": {
            "15": 58,
            "16": 58,
            "17": 26,
            "18": 58,
            "19": 58,
            "20": 12,
            "21": 58,
            "22": 58,
            "23": 58,
            "26": 58,
            "32": 58,
            "36": 58,
            "37": 58
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\SubPredicationMember.cs": {
      "Expressif.Predicates.SubPredicationMember": {
        "System.Type Expressif.Predicates.SubPredicationMember::get_Operator()": {
          "Lines": {
            "11": 16
          },
          "Branches": []
        },
        "System.ValueTuple`2<Expressif.Predicates.Combination.ICombinationOperator,Expressif.Predicates.IPredicate> Expressif.Predicates.SubPredicationMember::Build(Expressif.Context,Expressif.Predicates.PredicationFactory)": {
          "Lines": {
            "15": 1,
            "16": 1,
            "17": 1
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 12,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Expressif.Predicates.SubPredicationMember::.ctor(System.Type,Expressif.PredicationBuilder)": {
          "Lines": {
            "12": 3,
            "13": 3,
            "14": 3,
            "18": 3,
            "19": 3
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Text\\AnyOf.cs": {
      "Expressif.Predicates.Text.AnyOf": {
        "System.Collections.Generic.IEnumerable`1<System.Func`1<System.String>> Expressif.Predicates.Text.AnyOf::get_References()": {
          "Lines": {
            "16": 9
          },
          "Branches": []
        },
        "System.StringComparer Expressif.Predicates.Text.AnyOf::get_Comparer()": {
          "Lines": {
            "17": 18
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Text.AnyOf::EvaluateBaseText(System.String)": {
          "Lines": {
            "30": 49,
            "32": 18,
            "33": 18,
            "34": 5,
            "36": 4,
            "37": 5
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 49,
              "EndOffset": 14,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 18
            },
            {
              "Line": 33,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 5
            },
            {
              "Line": 33,
              "Offset": 37,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 22
            },
            {
              "Line": 30,
              "Offset": 49,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 4
            }
          ]
        },
        "System.Void Expressif.Predicates.Text.AnyOf::.ctor(System.Collections.Generic.IEnumerable`1<System.Func`1<System.String>>)": {
          "Lines": {
            "21": 18
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.AnyOf::.ctor(System.Collections.Generic.IEnumerable`1<System.Func`1<System.String>>,System.StringComparer)": {
          "Lines": {
            "25": 9,
            "26": 9
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Text\\BaseTextPredicate.cs": {
      "Expressif.Predicates.Text.BaseTextPredicate": {
        "System.Boolean Expressif.Predicates.Text.BaseTextPredicate::Evaluate(System.Object)": {
          "Lines": {
            "17": 357,
            "18": 357,
            "19": 13,
            "20": 0,
            "21": 321,
            "22": 23,
            "23": 357
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 344
            },
            {
              "Line": 17,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 344
            },
            {
              "Line": 17,
              "Offset": 1,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 13
            },
            {
              "Line": 17,
              "Offset": 9,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 19,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 321
            },
            {
              "Line": 17,
              "Offset": 19,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 23
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Text.BaseTextPredicate::EvaluateUncasted(System.Object)": {
          "Lines": {
            "30": 3,
            "31": 0,
            "32": 3,
            "33": 0,
            "35": 3,
            "36": 3,
            "37": 3
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 32,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 31,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 3
            }
          ]
        }
      },
      "Expressif.Predicates.Text.BaseTextPredicateWithoutReference": {
        "System.Boolean Expressif.Predicates.Text.BaseTextPredicateWithoutReference::EvaluateBaseText(System.String)": {
          "Lines": {
            "45": 39,
            "46": 4,
            "48": 35,
            "49": 8,
            "51": 27
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4
            },
            {
              "Line": 45,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 35
            },
            {
              "Line": 48,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 8
            },
            {
              "Line": 48,
              "Offset": 31,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 27
            }
          ]
        }
      },
      "Expressif.Predicates.Text.BaseTextPredicateReference": {
        "System.Func`1<System.String> Expressif.Predicates.Text.BaseTextPredicateReference::get_Reference()": {
          "Lines": {
            "58": 445
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Text.BaseTextPredicateReference::EvaluateBaseText(System.String)": {
          "Lines": {
            "65": 130,
            "66": 1,
            "67": 129,
            "68": 129,
            "69": 0,
            "71": 129,
            "72": 42,
            "74": 129,
            "75": 129,
            "76": 28,
            "78": 129
          },
          "Branches": [
            {
              "Line": 65,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 129
            },
            {
              "Line": 65,
              "Offset": 11,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 65,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 65,
              "Offset": 34,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 129
            },
            {
              "Line": 67,
              "Offset": 54,
              "EndOffset": 56,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 112
            },
            {
              "Line": 67,
              "Offset": 54,
              "EndOffset": 79,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 26
            },
            {
              "Line": 67,
              "Offset": 77,
              "EndOffset": 79,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 26
            },
            {
              "Line": 67,
              "Offset": 90,
              "EndOffset": 92,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 67,
              "Offset": 113,
              "EndOffset": 115,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 67,
              "Offset": 77,
              "EndOffset": 122,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 129
            },
            {
              "Line": 67,
              "Offset": 90,
              "EndOffset": 122,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 129
            },
            {
              "Line": 67,
              "Offset": 113,
              "EndOffset": 122,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 129
            },
            {
              "Line": 71,
              "Offset": 133,
              "EndOffset": 135,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 42
            },
            {
              "Line": 71,
              "Offset": 133,
              "EndOffset": 142,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 129
            },
            {
              "Line": 75,
              "Offset": 165,
              "EndOffset": 167,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 28
            },
            {
              "Line": 75,
              "Offset": 165,
              "EndOffset": 173,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 129
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Text.BaseTextPredicateReference::EvaluateWhitespaces()": {
          "Lines": {
            "82": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.BaseTextPredicateReference::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "60": 134,
            "61": 134
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Text\\Casing.cs": {
      "Expressif.Predicates.Text.LowerCase": {
        "System.Boolean Expressif.Predicates.Text.LowerCase::EvaluateNull()": {
          "Lines": {
            "14": 2
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Text.LowerCase::EvaluateText(System.String)": {
          "Lines": {
            "16": 15
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.UpperCase": {
        "System.Boolean Expressif.Predicates.Text.UpperCase::EvaluateNull()": {
          "Lines": {
            "24": 2
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Text.UpperCase::EvaluateText(System.String)": {
          "Lines": {
            "26": 12
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Text\\Matching.cs": {
      "Expressif.Predicates.Text.BaseTextPredicateMatching": {
        "System.Globalization.CultureInfo Expressif.Predicates.Text.BaseTextPredicateMatching::get_CultureInfo()": {
          "Lines": {
            "16": 267
          },
          "Branches": []
        },
        "System.Globalization.CultureInfo Expressif.Predicates.Text.BaseTextPredicateMatching::GetCulture(System.String)": {
          "Lines": {
            "25": 174,
            "26": 65,
            "28": 109,
            "29": 109,
            "30": 109,
            "31": 109
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 65
            },
            {
              "Line": 25,
              "Offset": 6,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 109
            }
          ]
        },
        "System.Void Expressif.Predicates.Text.BaseTextPredicateMatching::.ctor()": {
          "Lines": {
            "19": 327
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.BaseTextPredicateMatching::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "20": 174,
            "21": 174
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 15,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 174
            }
          ]
        }
      },
      "Expressif.Predicates.Text.MatchesNumeric": {
        "System.Boolean Expressif.Predicates.Text.MatchesNumeric::EvaluateUncasted(System.Object)": {
          "Lines": {
            "46": 4
          },
          "Branches": [
            {
              "Line": 46,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 11,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Text.MatchesNumeric::EvaluateBaseText(System.String)": {
          "Lines": {
            "49": 46
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.MatchesNumeric::.ctor()": {
          "Lines": {
            "41": 68
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.MatchesNumeric::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "43": 36
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.MatchesDate": {
        "System.Boolean Expressif.Predicates.Text.MatchesDate::EvaluateUncasted(System.Object)": {
          "Lines": {
            "63": 7,
            "64": 7,
            "65": 5,
            "66": 1,
            "67": 1,
            "68": 0,
            "69": 7
          },
          "Branches": [
            {
              "Line": 63,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 5
            },
            {
              "Line": 63,
              "Offset": 6,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 63,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 63,
              "Offset": 23,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 63,
              "Offset": 31,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 63,
              "Offset": 31,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Text.MatchesDate::EvaluateBaseText(System.String)": {
          "Lines": {
            "72": 51
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Text.MatchesDate::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "75": 5
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.MatchesDate::.ctor()": {
          "Lines": {
            "58": 58
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.MatchesDate::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "60": 64
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.MatchesDateTime": {
        "System.String Expressif.Predicates.Text.MatchesDateTime::get_Pattern()": {
          "Lines": {
            "83": 21
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Text.MatchesDateTime::EvaluateUncasted(System.Object)": {
          "Lines": {
            "91": 3,
            "92": 3,
            "93": 1,
            "94": 1,
            "95": 1,
            "96": 0,
            "97": 3
          },
          "Branches": [
            {
              "Line": 91,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 91,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 91,
              "Offset": 6,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 91,
              "Offset": 14,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 91,
              "Offset": 22,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 91,
              "Offset": 22,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Text.MatchesDateTime::EvaluateBaseText(System.String)": {
          "Lines": {
            "100": 21
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.MatchesDateTime::.ctor()": {
          "Lines": {
            "86": 50
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.MatchesDateTime::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "88": 0
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.MatchesTime": {
        "System.Boolean Expressif.Predicates.Text.MatchesTime::EvaluateUncasted(System.Object)": {
          "Lines": {
            "114": 6,
            "115": 6,
            "116": 2,
            "117": 1,
            "118": 1,
            "119": 2,
            "120": 0,
            "121": 6
          },
          "Branches": [
            {
              "Line": 114,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4
            },
            {
              "Line": 114,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 3
            },
            {
              "Line": 114,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 114,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 2
            },
            {
              "Line": 114,
              "Offset": 6,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 114,
              "Offset": 14,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 114,
              "Offset": 22,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 114,
              "Offset": 30,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Text.MatchesTime::EvaluateBaseText(System.String)": {
          "Lines": {
            "124": 28
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Text.MatchesTime::EvaluateTimeSpan(System.TimeSpan)": {
          "Lines": {
            "127": 2
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.MatchesTime::.ctor()": {
          "Lines": {
            "109": 42
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.MatchesTime::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "111": 30
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Text\\Sorting.cs": {
      "Expressif.Predicates.Text.EquivalentTo": {
        "System.StringComparer Expressif.Predicates.Text.EquivalentTo::get_Comparer()": {
          "Lines": {
            "18": 57
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Text.EquivalentTo::EvaluateText(System.String,System.String)": {
          "Lines": {
            "30": 25
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.EquivalentTo::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "22": 14
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.EquivalentTo::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "27": 171
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.SortedAfter": {
        "System.Boolean Expressif.Predicates.Text.SortedAfter::EvaluateText(System.String,System.String)": {
          "Lines": {
            "48": 9
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.SortedAfter::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "40": 18
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.SortedAfter::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "45": 18
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.SortedAfterOrEquivalentTo": {
        "System.Boolean Expressif.Predicates.Text.SortedAfterOrEquivalentTo::EvaluateText(System.String,System.String)": {
          "Lines": {
            "65": 7
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.SortedAfterOrEquivalentTo::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "57": 14
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.SortedAfterOrEquivalentTo::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "62": 14
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.SortedBefore": {
        "System.Boolean Expressif.Predicates.Text.SortedBefore::EvaluateText(System.String,System.String)": {
          "Lines": {
            "83": 9
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.SortedBefore::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "75": 18
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.SortedBefore::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "80": 18
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.SortedBeforeOrEquivalentTo": {
        "System.Boolean Expressif.Predicates.Text.SortedBeforeOrEquivalentTo::EvaluateText(System.String,System.String)": {
          "Lines": {
            "101": 7
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.SortedBeforeOrEquivalentTo::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "93": 14
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.SortedBeforeOrEquivalentTo::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "98": 14
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Text\\Special.cs": {
      "Expressif.Predicates.Text.Empty": {
        "System.Boolean Expressif.Predicates.Text.Empty::EvaluateText(System.String)": {
          "Lines": {
            "14": 4
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.EmptyOrNull": {
        "System.Boolean Expressif.Predicates.Text.EmptyOrNull::EvaluateNull()": {
          "Lines": {
            "22": 2
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Text.EmptyOrNull::EvaluateText(System.String)": {
          "Lines": {
            "23": 4
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Text\\Substring.cs": {
      "Expressif.Predicates.Text.BaseTextPredicateSubstring": {
        "System.StringComparison Expressif.Predicates.Text.BaseTextPredicateSubstring::get_Comparison()": {
          "Lines": {
            "15": 72
          },
          "Branches": []
        },
        "System.StringComparison Expressif.Predicates.Text.BaseTextPredicateSubstring::GetComparison(System.StringComparer)": {
          "Lines": {
            "25": 77,
            "26": 77,
            "27": 77,
            "28": 77,
            "29": 77,
            "30": 77,
            "31": 77,
            "33": 0
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 77
            },
            {
              "Line": 30,
              "Offset": 37,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Expressif.Predicates.Text.BaseTextPredicateSubstring::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.BaseTextPredicateSubstring::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "21": 231
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.StartsWith": {
        "System.Boolean Expressif.Predicates.Text.StartsWith::EvaluateText(System.String,System.String)": {
          "Lines": {
            "52": 28
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.StartsWith::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "44": 60
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.StartsWith::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "49": 0
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.EndsWith": {
        "System.Boolean Expressif.Predicates.Text.EndsWith::EvaluateText(System.String,System.String)": {
          "Lines": {
            "70": 24
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.EndsWith::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "62": 50
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.EndsWith::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "67": 0
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.Contains": {
        "System.Boolean Expressif.Predicates.Text.Contains::EvaluateText(System.String,System.String)": {
          "Lines": {
            "88": 9
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.Contains::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "80": 18
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.Contains::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "85": 0
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Text.MatchesRegex": {
        "System.Boolean Expressif.Predicates.Text.MatchesRegex::EvaluateText(System.String,System.String)": {
          "Lines": {
            "107": 11,
            "108": 11,
            "109": 11
          },
          "Branches": [
            {
              "Line": 107,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 107,
              "Offset": 7,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 5
            }
          ]
        },
        "System.Void Expressif.Predicates.Text.MatchesRegex::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "98": 14
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Text.MatchesRegex::.ctor(System.Func`1<System.String>,System.StringComparer)": {
          "Lines": {
            "103": 12
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Temporal\\BaseDateTimePredicate.cs": {
      "Expressif.Predicates.Temporal.BaseDateTimePredicate": {
        "System.Boolean Expressif.Predicates.Temporal.BaseDateTimePredicate::Evaluate(System.Object)": {
          "Lines": {
            "17": 60,
            "18": 60,
            "19": 9,
            "20": 0,
            "21": 0,
            "22": 3,
            "23": 48,
            "24": 60
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 51
            },
            {
              "Line": 17,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 51
            },
            {
              "Line": 17,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 17,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 51
            },
            {
              "Line": 17,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 3
            },
            {
              "Line": 17,
              "Offset": 1,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 9
            },
            {
              "Line": 17,
              "Offset": 9,
              "EndOffset": 54,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 34,
              "EndOffset": 83,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 48
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Temporal.BaseDateTimePredicate::EvaluateUncasted(System.Object)": {
          "Lines": {
            "28": 48,
            "29": 9,
            "31": 39,
            "32": 39,
            "33": 39
          },
          "Branches": [
            {
              "Line": 28,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 9
            },
            {
              "Line": 28,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 39
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Temporal.BaseDateTimePredicate::EvaluateDate(System.DateOnly)": {
          "Lines": {
            "36": 0
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Temporal.BaseDateTimePredicateReference": {
        "System.Func`1<System.DateTime> Expressif.Predicates.Temporal.BaseDateTimePredicateReference::get_Reference()": {
          "Lines": {
            "43": 20
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Temporal.BaseDateTimePredicateReference::.ctor(System.Func`1<System.DateTime>)": {
          "Lines": {
            "45": 30,
            "46": 30
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Temporal\\Comparison.cs": {
      "Expressif.Predicates.Temporal.SameInstant": {
        "System.Boolean Expressif.Predicates.Temporal.SameInstant::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "20": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Temporal.SameInstant::.ctor(System.Func`1<System.DateTime>)": {
          "Lines": {
            "17": 12
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Temporal.After": {
        "System.Boolean Expressif.Predicates.Temporal.After::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "33": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Temporal.After::.ctor(System.Func`1<System.DateTime>)": {
          "Lines": {
            "30": 12
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Temporal.AfterOrSameInstant": {
        "System.Boolean Expressif.Predicates.Temporal.AfterOrSameInstant::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "46": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Temporal.AfterOrSameInstant::.ctor(System.Func`1<System.DateTime>)": {
          "Lines": {
            "43": 12
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Temporal.Before": {
        "System.Boolean Expressif.Predicates.Temporal.Before::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "59": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Temporal.Before::.ctor(System.Func`1<System.DateTime>)": {
          "Lines": {
            "56": 12
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Temporal.BeforeOrSameInstant": {
        "System.Boolean Expressif.Predicates.Temporal.BeforeOrSameInstant::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "72": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Temporal.BeforeOrSameInstant::.ctor(System.Func`1<System.DateTime>)": {
          "Lines": {
            "69": 12
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Temporal\\Interval.cs": {
      "Expressif.Predicates.Temporal.ContainedIn": {
        "Expressif.Values.Interval`1<System.DateTime> Expressif.Predicates.Temporal.ContainedIn::get_Interval()": {
          "Lines": {
            "16": 4
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Temporal.ContainedIn::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "23": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Temporal.ContainedIn::.ctor(Expressif.Values.Interval`1<System.DateTime>)": {
          "Lines": {
            "19": 6,
            "20": 6
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Temporal\\OnTheInstant.cs": {
      "Expressif.Predicates.Temporal.OnTheInstant": {
        "System.Boolean Expressif.Predicates.Temporal.OnTheInstant::EvaluateDate(System.DateOnly)": {
          "Lines": {
            "11": 3
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Temporal.OnTheDay": {
        "System.Boolean Expressif.Predicates.Temporal.OnTheDay::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "20": 5
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Temporal.OnTheHour": {
        "System.Boolean Expressif.Predicates.Temporal.OnTheHour::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "29": 5
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Temporal.OnTheMinute": {
        "System.Boolean Expressif.Predicates.Temporal.OnTheMinute::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "38": 5
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Special\\Null.cs": {
      "Expressif.Predicates.Special.Null": {
        "System.Boolean Expressif.Predicates.Special.Null::Evaluate(System.Object)": {
          "Lines": {
            "18": 8,
            "19": 8,
            "20": 1,
            "21": 0,
            "22": 5,
            "23": 2,
            "24": 8
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 7
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 7
            },
            {
              "Line": 18,
              "Offset": 1,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 19,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 5
            },
            {
              "Line": 18,
              "Offset": 19,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Special.Null::EvaluateText(System.String)": {
          "Lines": {
            "29": 5,
            "30": 1,
            "31": 4
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Serializer\\PredicationMemberSerializer.cs": {
      "Expressif.Predicates.Serializer.PredicationMemberSerializer": {
        "Expressif.Functions.Serializer.ParameterSerializer Expressif.Predicates.Serializer.PredicationMemberSerializer::get_ParameterSerializer()": {
          "Lines": {
            "15": 17
          },
          "Branches": []
        },
        "System.String Expressif.Predicates.Serializer.PredicationMemberSerializer::Serialize(Expressif.Predicates.PredicationMember)": {
          "Lines": {
            "25": 22,
            "26": 78,
            "28": 17,
            "29": 17,
            "30": 0,
            "31": 17,
            "32": 17,
            "35": 22,
            "37": 22,
            "39": 22,
            "40": 22,
            "41": 22,
            "43": 22
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 119,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 17
            },
            {
              "Line": 28,
              "Offset": 48,
              "EndOffset": 50,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 48,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 17
            },
            {
              "Line": 31,
              "Offset": 58,
              "EndOffset": 60,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 58,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 17
            },
            {
              "Line": 31,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 71,
              "EndOffset": 84,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 17
            },
            {
              "Line": 26,
              "Offset": 119,
              "EndOffset": 121,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 22
            },
            {
              "Line": 35,
              "Offset": 142,
              "EndOffset": 144,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 20
            },
            {
              "Line": 35,
              "Offset": 142,
              "EndOffset": 151,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 2
            },
            {
              "Line": 39,
              "Offset": 180,
              "EndOffset": 182,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 9
            },
            {
              "Line": 39,
              "Offset": 180,
              "EndOffset": 185,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 13
            }
          ]
        },
        "System.String Expressif.Predicates.Serializer.PredicationMemberSerializer::Serialize(System.Type)": {
          "Lines": {
            "48": 24,
            "49": 0,
            "51": 24,
            "52": 24,
            "53": 24
          },
          "Branches": [
            {
              "Line": 48,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 9
            },
            {
              "Line": 48,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 7,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 24
            },
            {
              "Line": 48,
              "Offset": 30,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 24
            },
            {
              "Line": 51,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 9
            },
            {
              "Line": 51,
              "Offset": 45,
              "EndOffset": 89,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 15
            }
          ]
        },
        "System.Void Expressif.Predicates.Serializer.PredicationMemberSerializer::.ctor()": {
          "Lines": {
            "18": 76
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Serializer.PredicationMemberSerializer::.ctor(Expressif.Functions.Serializer.ParameterSerializer)": {
          "Lines": {
            "20": 41,
            "21": 41
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 9,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 41
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Serializer\\PredicationSerializer.cs": {
      "Expressif.Predicates.Serializer.PredicationSerializer": {
        "Expressif.Predicates.Serializer.PredicationMemberSerializer Expressif.Predicates.Serializer.PredicationSerializer::get_MemberSerializer()": {
          "Lines": {
            "11": 22
          },
          "Branches": []
        },
        "System.String Expressif.Predicates.Serializer.PredicationSerializer::Serialize(Expressif.PredicationBuilder)": {
          "Lines": {
            "20": 11,
            "21": 66,
            "24": 22,
            "25": 22,
            "26": 20,
            "27": 2,
            "28": 0,
            "29": 22,
            "31": 11,
            "32": 11
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 152,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 22
            },
            {
              "Line": 24,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 24,
              "Offset": 40,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 20
            },
            {
              "Line": 24,
              "Offset": 52,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 24,
              "Offset": 52,
              "EndOffset": 123,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 152,
              "EndOffset": 157,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 11
            }
          ]
        },
        "System.Void Expressif.Predicates.Serializer.PredicationSerializer::.ctor()": {
          "Lines": {
            "14": 66
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Serializer.PredicationSerializer::.ctor(Expressif.Predicates.Serializer.PredicationMemberSerializer)": {
          "Lines": {
            "15": 35,
            "16": 35
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 35
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Numeric\\BaseNumericPredicate.cs": {
      "Expressif.Predicates.Numeric.BaseNumericPredicate": {
        "System.Boolean Expressif.Predicates.Numeric.BaseNumericPredicate::Evaluate(System.Object)": {
          "Lines": {
            "16": 60,
            "17": 60,
            "18": 11,
            "19": 0,
            "20": 0,
            "21": 49,
            "22": 60
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 49
            },
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 49
            },
            {
              "Line": 16,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 1,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 11
            },
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 17,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 49
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Numeric.BaseNumericPredicate::EvaluateUncasted(System.Object)": {
          "Lines": {
            "26": 49,
            "27": 2,
            "29": 47,
            "30": 47,
            "31": 47
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 26,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 47
            }
          ]
        }
      },
      "Expressif.Predicates.Numeric.BaseNumericPredicateReference": {
        "System.Func`1<System.Decimal> Expressif.Predicates.Numeric.BaseNumericPredicateReference::get_Reference()": {
          "Lines": {
            "39": 74
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Numeric.BaseNumericPredicateReference::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "41": 47,
            "42": 47
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Numeric\\Comparison.cs": {
      "Expressif.Predicates.Numeric.EqualTo": {
        "System.Boolean Expressif.Predicates.Numeric.EqualTo::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "22": 5
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Numeric.EqualTo::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "19": 44
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Numeric.GreaterThan": {
        "System.Boolean Expressif.Predicates.Numeric.GreaterThan::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "35": 5
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Numeric.GreaterThan::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "32": 12
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Numeric.GreaterThanOrEqual": {
        "System.Boolean Expressif.Predicates.Numeric.GreaterThanOrEqual::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "48": 5
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Numeric.GreaterThanOrEqual::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "45": 12
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Numeric.LessThan": {
        "System.Boolean Expressif.Predicates.Numeric.LessThan::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "61": 5
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Numeric.LessThan::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "58": 12
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Numeric.LessThanOrEqual": {
        "System.Boolean Expressif.Predicates.Numeric.LessThanOrEqual::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "74": 5
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Numeric.LessThanOrEqual::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "71": 12
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Numeric\\Interval.cs": {
      "Expressif.Predicates.Numeric.WithinInterval": {
        "System.Func`1<Expressif.Values.Interval`1<System.Decimal>> Expressif.Predicates.Numeric.WithinInterval::get_Interval()": {
          "Lines": {
            "15": 4
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Numeric.WithinInterval::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "22": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Numeric.WithinInterval::.ctor(System.Func`1<Expressif.Values.Interval`1<System.Decimal>>)": {
          "Lines": {
            "18": 5,
            "19": 5
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Numeric\\Modulo.cs": {
      "Expressif.Predicates.Numeric.Modulo": {
        "System.Func`1<System.Decimal> Expressif.Predicates.Numeric.Modulo::get_Remainder()": {
          "Lines": {
            "20": 15
          },
          "Branches": []
        },
        "System.Func`1<System.Decimal> Expressif.Predicates.Numeric.Modulo::get_Modulus()": {
          "Lines": {
            "21": 10
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Numeric.Modulo::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "33": 10
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Numeric.Modulo::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "25": 11
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Numeric.Modulo::.ctor(System.Func`1<System.Decimal>,System.Func`1<System.Decimal>)": {
          "Lines": {
            "30": 39
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Numeric.Even": {
        "System.Void Expressif.Predicates.Numeric.Even::.ctor()": {
          "Lines": {
            "42": 11
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Numeric.Odd": {
        "System.Void Expressif.Predicates.Numeric.Odd::.ctor()": {
          "Lines": {
            "52": 14
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Numeric\\Special.cs": {
      "Expressif.Predicates.Numeric.Integer": {
        "System.Boolean Expressif.Predicates.Numeric.Integer::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "15": 4
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Numeric.ZeroOrNull": {
        "System.Boolean Expressif.Predicates.Numeric.ZeroOrNull::EvaluateNull()": {
          "Lines": {
            "23": 2
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Numeric.ZeroOrNull::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "24": 4
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Introspection\\PredicateInfo.cs": {
      "Expressif.Predicates.Introspection.PredicateInfo": {
        "System.String Expressif.Predicates.Introspection.PredicateInfo::get_Name()": {
          "Lines": {
            "12": 4136
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Introspection.PredicateInfo::get_IsPublic()": {
          "Lines": {
            "13": 3124
          },
          "Branches": []
        },
        "System.String[] Expressif.Predicates.Introspection.PredicateInfo::get_Aliases()": {
          "Lines": {
            "14": 10032
          },
          "Branches": []
        },
        "System.String Expressif.Predicates.Introspection.PredicateInfo::get_Scope()": {
          "Lines": {
            "15": 3212
          },
          "Branches": []
        },
        "System.Type Expressif.Predicates.Introspection.PredicateInfo::get_ImplementationType()": {
          "Lines": {
            "16": 5016
          },
          "Branches": []
        },
        "System.String Expressif.Predicates.Introspection.PredicateInfo::get_Summary()": {
          "Lines": {
            "17": 3124
          },
          "Branches": []
        },
        "Expressif.Functions.Introspection.ParameterInfo[] Expressif.Predicates.Introspection.PredicateInfo::get_Parameters()": {
          "Lines": {
            "18": 3124
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Introspection.PredicateInfo::.ctor(System.String,System.Boolean,System.String[],System.String,System.Type,System.String,Expressif.Functions.Introspection.ParameterInfo[])": {
          "Lines": {
            "10": 3124,
            "11": 3124,
            "19": 3124
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Introspection\\PredicateIntrospector.cs": {
      "Expressif.Predicates.Introspection.PredicateIntrospector": {
        "System.Collections.Generic.IEnumerable`1<Expressif.Predicates.Introspection.PredicateInfo> Expressif.Predicates.Introspection.PredicateIntrospector::Locate()": {
          "Lines": {
            "21": 22
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Introspection.PredicateIntrospector::.ctor()": {
          "Lines": {
            "14": 44
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Introspection.PredicateIntrospector::.ctor(System.Reflection.Assembly[])": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Introspection.PredicateIntrospector::.ctor(Expressif.Functions.Introspection.ITypesProbe)": {
          "Lines": {
            "18": 44
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Introspection.PredicateIntrospector/<>c__4`1": {
        "System.Boolean Expressif.Predicates.Introspection.PredicateIntrospector/<>c__4`1::<Locate>b__4_0(System.String)": {
          "Lines": {
            "37": 12496
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Introspection.PredicateIntrospector/<Locate>d__4`1": {
        "System.Boolean Expressif.Predicates.Introspection.PredicateIntrospector/<Locate>d__4`1::MoveNext()": {
          "Lines": {
            "25": 71,
            "27": 6390,
            "29": 3124,
            "30": 3124,
            "31": 3124,
            "32": 3124,
            "33": 3124,
            "35": 3124,
            "39": 3124,
            "40": 3124,
            "41": 3124,
            "42": 3124,
            "43": 3124,
            "44": 3124,
            "45": 3124,
            "46": 3124,
            "47": 3124,
            "49": 71
          },
          "Branches": [
            {
              "Line": 27,
              "Offset": 462,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 3124
            },
            {
              "Line": 29,
              "Offset": 95,
              "EndOffset": 97,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 710
            },
            {
              "Line": 29,
              "Offset": 95,
              "EndOffset": 116,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3053
            },
            {
              "Line": 29,
              "Offset": 114,
              "EndOffset": 116,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 3053
            },
            {
              "Line": 29,
              "Offset": 133,
              "EndOffset": 135,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 639
            },
            {
              "Line": 29,
              "Offset": 133,
              "EndOffset": 149,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2414
            },
            {
              "Line": 29,
              "Offset": 114,
              "EndOffset": 181,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 71
            },
            {
              "Line": 35,
              "Offset": 200,
              "EndOffset": 202,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 568
            },
            {
              "Line": 35,
              "Offset": 200,
              "EndOffset": 209,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 2556
            },
            {
              "Line": 37,
              "Offset": 258,
              "EndOffset": 260,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 1
            },
            {
              "Line": 37,
              "Offset": 258,
              "EndOffset": 283,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 3124
            },
            {
              "Line": 27,
              "Offset": 462,
              "EndOffset": 467,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 71
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Combination\\AndOperator.cs": {
      "Expressif.Predicates.Combination.AndOperator": {
        "System.Boolean Expressif.Predicates.Combination.AndOperator::Evaluate(Expressif.Predicates.IPredicate,Expressif.Predicates.IPredicate,System.Object)": {
          "Lines": {
            "15": 14
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 11
            },
            {
              "Line": 15,
              "Offset": 7,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            }
          ]
        },
        "System.Void Expressif.Predicates.Combination.AndOperator::.ctor()": {
          "Lines": {
            "12": 30
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Combination\\NeutralOperator.cs": {
      "Expressif.Predicates.Combination.NeutralOperator": {
        "Expressif.Predication Expressif.Predicates.Combination.NeutralOperator::get_RightMember()": {
          "Lines": {
            "11": 4
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Combination.NeutralOperator::Evaluate(System.Boolean,System.Object)": {
          "Lines": {
            "16": 2
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Combination.NeutralOperator::.ctor(Expressif.Predication)": {
          "Lines": {
            "13": 2,
            "14": 2
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Combination\\OrOperator.cs": {
      "Expressif.Predicates.Combination.OrOperator": {
        "System.Boolean Expressif.Predicates.Combination.OrOperator::Evaluate(Expressif.Predicates.IPredicate,Expressif.Predicates.IPredicate,System.Object)": {
          "Lines": {
            "15": 19
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 13
            },
            {
              "Line": 15,
              "Offset": 7,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6
            }
          ]
        },
        "System.Void Expressif.Predicates.Combination.OrOperator::.ctor()": {
          "Lines": {
            "12": 38
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Combination\\XorOperator.cs": {
      "Expressif.Predicates.Combination.XorOperator": {
        "System.Boolean Expressif.Predicates.Combination.XorOperator::Evaluate(Expressif.Predicates.IPredicate,Expressif.Predicates.IPredicate,System.Object)": {
          "Lines": {
            "15": 8
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Combination.XorOperator::.ctor()": {
          "Lines": {
            "12": 16
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Boolean\\BaseBooleanPredicate.cs": {
      "Expressif.Predicates.Boolean.BaseBooleanPredicate": {
        "System.Boolean Expressif.Predicates.Boolean.BaseBooleanPredicate::Evaluate(System.Object)": {
          "Lines": {
            "16": 79,
            "17": 79,
            "18": 6,
            "19": 0,
            "20": 12,
            "21": 61,
            "22": 79
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 73
            },
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 73
            },
            {
              "Line": 16,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 12
            },
            {
              "Line": 16,
              "Offset": 1,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6
            },
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 17,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 61
            }
          ]
        },
        "System.Boolean Expressif.Predicates.Boolean.BaseBooleanPredicate::EvaluateUncasted(System.Object)": {
          "Lines": {
            "26": 61,
            "27": 6,
            "29": 55,
            "30": 55,
            "31": 55
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 26,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 55
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Boolean\\IdenticalTo.cs": {
      "Expressif.Predicates.Boolean.IdenticalTo": {
        "System.Func`1<System.Boolean> Expressif.Predicates.Boolean.IdenticalTo::get_Reference()": {
          "Lines": {
            "15": 22
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Boolean.IdenticalTo::EvaluateBoolean(System.Boolean)": {
          "Lines": {
            "21": 22
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Boolean.IdenticalTo::.ctor(System.Func`1<System.Boolean>)": {
          "Lines": {
            "18": 26,
            "19": 26
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Boolean\\Negate.cs": {
      "Expressif.Predicates.Boolean.Negate": {
        "Expressif.Predicates.IPredicate Expressif.Predicates.Boolean.Negate::get_InnerPredicate()": {
          "Lines": {
            "12": 9
          },
          "Branches": []
        },
        "System.Boolean Expressif.Predicates.Boolean.Negate::Evaluate(System.Object)": {
          "Lines": {
            "17": 9
          },
          "Branches": []
        },
        "System.Object Expressif.Predicates.Boolean.Negate::Expressif.Functions.IFunction.Evaluate(System.Object)": {
          "Lines": {
            "18": 2
          },
          "Branches": []
        },
        "System.Void Expressif.Predicates.Boolean.Negate::.ctor(Expressif.Predicates.IPredicate)": {
          "Lines": {
            "14": 9,
            "15": 9
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Predicates\\Boolean\\TrueFalse.cs": {
      "Expressif.Predicates.Boolean.True": {
        "System.Boolean Expressif.Predicates.Boolean.True::EvaluateBoolean(System.Boolean)": {
          "Lines": {
            "15": 22
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Boolean.TrueOrNull": {
        "System.Boolean Expressif.Predicates.Boolean.TrueOrNull::EvaluateNull()": {
          "Lines": {
            "23": 2
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Boolean.False": {
        "System.Boolean Expressif.Predicates.Boolean.False::EvaluateBoolean(System.Boolean)": {
          "Lines": {
            "31": 23
          },
          "Branches": []
        }
      },
      "Expressif.Predicates.Boolean.FalseOrNull": {
        "System.Boolean Expressif.Predicates.Boolean.FalseOrNull::EvaluateNull()": {
          "Lines": {
            "39": 2
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Parsers\\Expression.cs": {
      "Expressif.Parsers.Expression": {
        "System.Collections.Generic.IEnumerable`1<Expressif.Parsers.Function> Expressif.Parsers.Expression::get_Members()": {
          "Lines": {
            "12": 19
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Expression::.ctor(System.Collections.Generic.IEnumerable`1<Expressif.Parsers.Function>)": {
          "Lines": {
            "14": 19,
            "15": 19
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Expression::.cctor()": {
          "Lines": {
            "17": 1,
            "18": 1,
            "19": 19,
            "20": 19,
            "21": 10,
            "22": 29,
            "23": 20
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.InputExpression": {
        "System.Collections.Generic.IEnumerable`1<Expressif.Parsers.Function> Expressif.Parsers.InputExpression::get_Members()": {
          "Lines": {
            "28": 8
          },
          "Branches": []
        },
        "Expressif.Parsers.IParameter Expressif.Parsers.InputExpression::get_Parameter()": {
          "Lines": {
            "29": 5
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.InputExpression::.ctor(Expressif.Parsers.IParameter,System.Collections.Generic.IEnumerable`1<Expressif.Parsers.Function>)": {
          "Lines": {
            "31": 12,
            "32": 12
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.InputExpression::.cctor()": {
          "Lines": {
            "34": 1,
            "35": 1,
            "36": 8,
            "37": 8,
            "38": 7,
            "39": 7,
            "40": 8,
            "41": 9
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Parsers\\Function.cs": {
      "Expressif.Parsers.Function": {
        "System.String Expressif.Parsers.Function::get_Name()": {
          "Lines": {
            "15": 42
          },
          "Branches": []
        },
        "Expressif.Parsers.IParameter[] Expressif.Parsers.Function::get_Parameters()": {
          "Lines": {
            "16": 42
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Function::.ctor(System.String,Expressif.Parsers.IParameter[])": {
          "Lines": {
            "18": 88,
            "19": 88
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Function::.cctor()": {
          "Lines": {
            "10": 1,
            "11": 1,
            "12": 73,
            "13": 74
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Parsers\\Grammar.cs": {
      "Expressif.Parsers.Grammar": {
        "System.Void Expressif.Parsers.Grammar::.cctor()": {
          "Lines": {
            "12": 1,
            "13": 1,
            "14": 1,
            "16": 1,
            "17": 1,
            "18": 86,
            "20": 1,
            "22": 1,
            "23": 1,
            "24": 26,
            "25": 27,
            "27": 1,
            "28": 1,
            "29": 69,
            "30": 70,
            "32": 1,
            "33": 1,
            "35": 1
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Parsers\\Interval.cs": {
      "Expressif.Parsers.Interval": {
        "System.String Expressif.Parsers.Interval::get_LowerBound()": {
          "Lines": {
            "20": 11
          },
          "Branches": []
        },
        "System.String Expressif.Parsers.Interval::get_UpperBound()": {
          "Lines": {
            "21": 11
          },
          "Branches": []
        },
        "System.Char Expressif.Parsers.Interval::get_LowerBoundType()": {
          "Lines": {
            "22": 11
          },
          "Branches": []
        },
        "System.Char Expressif.Parsers.Interval::get_UpperBoundType()": {
          "Lines": {
            "23": 11
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Interval::.ctor(System.Char,System.String,System.String,System.Char)": {
          "Lines": {
            "25": 13,
            "27": 13,
            "28": 13
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Interval::.cctor()": {
          "Lines": {
            "12": 1,
            "13": 1,
            "14": 31,
            "15": 26,
            "16": 26,
            "17": 13,
            "18": 14
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Parsers\\Keyword.cs": {
      "Expressif.Parsers.Keyword": {
        "System.Void Expressif.Parsers.Keyword::.cctor()": {
          "Lines": {
            "12": 1,
            "13": 1,
            "14": 1
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Parsers\\Parameter.cs": {
      "Expressif.Parsers.LiteralParameter": {
        "System.String Expressif.Parsers.LiteralParameter::get_Value()": {
          "Lines": {
            "14": 412
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.IntervalParameter": {
        "Expressif.Parsers.Interval Expressif.Parsers.IntervalParameter::get_Value()": {
          "Lines": {
            "15": 10
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.VariableParameter": {
        "System.String Expressif.Parsers.VariableParameter::get_Name()": {
          "Lines": {
            "16": 66
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.ObjectPropertyParameter": {
        "System.String Expressif.Parsers.ObjectPropertyParameter::get_Name()": {
          "Lines": {
            "17": 23
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.ObjectIndexParameter": {
        "System.Int32 Expressif.Parsers.ObjectIndexParameter::get_Index()": {
          "Lines": {
            "18": 29
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.InputExpressionParameter": {
        "Expressif.Parsers.InputExpression Expressif.Parsers.InputExpressionParameter::get_Expression()": {
          "Lines": {
            "20": 28
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.Parameter": {
        "System.Void Expressif.Parsers.Parameter::.cctor()": {
          "Lines": {
            "24": 1,
            "25": 1,
            "26": 21,
            "28": 1,
            "29": 1,
            "30": 10,
            "31": 5,
            "32": 6,
            "34": 1,
            "35": 1,
            "36": 7,
            "37": 8,
            "39": 1,
            "40": 1,
            "41": 10,
            "42": 5,
            "43": 6,
            "45": 1,
            "46": 1,
            "47": 60,
            "49": 1,
            "50": 1,
            "51": 4,
            "54": 1,
            "55": 1,
            "56": 1,
            "57": 1,
            "58": 1,
            "59": 1,
            "60": 1,
            "61": 1
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.Parameters": {
        "System.Void Expressif.Parsers.Parameters::.cctor()": {
          "Lines": {
            "66": 1,
            "67": 1,
            "68": 124,
            "69": 124,
            "70": 124,
            "71": 18,
            "72": 142,
            "73": 62,
            "74": 62
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Parsers\\Predication.cs": {
      "Expressif.Parsers.BasicPredication": {
        "Expressif.Parsers.Function[] Expressif.Parsers.BasicPredication::get_Members()": {
          "Lines": {
            "18": 17
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.BasicPredication::.ctor(Expressif.Parsers.Function[])": {
          "Lines": {
            "20": 40,
            "21": 40
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.BasicPredication::.cctor()": {
          "Lines": {
            "23": 1,
            "24": 1,
            "25": 31,
            "27": 1,
            "28": 1,
            "29": 10,
            "30": 11,
            "32": 1
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.Operator": {
        "System.String Expressif.Parsers.Operator::get_Name()": {
          "Lines": {
            "37": 8
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Operator::.ctor(System.String)": {
          "Lines": {
            "39": 17,
            "40": 17
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Operator::.cctor()": {
          "Lines": {
            "42": 1,
            "43": 1,
            "44": 17,
            "45": 18
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.SubPredication": {
        "System.Void Expressif.Parsers.SubPredication::.cctor()": {
          "Lines": {
            "50": 1,
            "51": 1,
            "52": 16,
            "53": 8,
            "54": 9
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.Predication": {
        "Expressif.Parsers.IPredication Expressif.Parsers.Predication::get_LeftMember()": {
          "Lines": {
            "59": 8
          },
          "Branches": []
        },
        "Expressif.Parsers.Operator Expressif.Parsers.Predication::get_Operator()": {
          "Lines": {
            "60": 8
          },
          "Branches": []
        },
        "Expressif.Parsers.IPredication Expressif.Parsers.Predication::get_RightMember()": {
          "Lines": {
            "61": 8
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Predication::.ctor(Expressif.Parsers.IPredication,Expressif.Parsers.Operator,Expressif.Parsers.IPredication)": {
          "Lines": {
            "63": 17,
            "64": 17
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.Predication::.cctor()": {
          "Lines": {
            "66": 1,
            "67": 18
          },
          "Branches": []
        }
      },
      "Expressif.Parsers.InputPredication": {
        "Expressif.Parsers.IPredication Expressif.Parsers.InputPredication::get_Predication()": {
          "Lines": {
            "73": 5
          },
          "Branches": []
        },
        "Expressif.Parsers.IParameter Expressif.Parsers.InputPredication::get_Parameter()": {
          "Lines": {
            "74": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.InputPredication::.ctor(Expressif.Parsers.IParameter,Expressif.Parsers.IPredication)": {
          "Lines": {
            "76": 5,
            "77": 5
          },
          "Branches": []
        },
        "System.Void Expressif.Parsers.InputPredication::.cctor()": {
          "Lines": {
            "79": 1,
            "80": 1,
            "81": 10,
            "82": 5,
            "83": 6
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\BaseExpressionFactory.cs": {
      "Expressif.Functions.BaseExpressionFactory": {
        "System.Collections.Generic.IDictionary`2<System.String,System.Type> Expressif.Functions.BaseExpressionFactory::get_Mapping()": {
          "Lines": {
            "23": 132
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 50
            },
            {
              "Line": 23,
              "Offset": 7,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 132
            }
          ]
        },
        "T Expressif.Functions.BaseExpressionFactory::Instantiate(System.String,Expressif.Parsers.IParameter[],Expressif.Context)": {
          "Lines": {
            "28": 38
          },
          "Branches": []
        },
        "T Expressif.Functions.BaseExpressionFactory::Instantiate(System.Type,Expressif.Parsers.IParameter[],Expressif.Context)": {
          "Lines": {
            "32": 149,
            "34": 226,
            "35": 149,
            "37": 452,
            "40": 77,
            "42": 77,
            "43": 77,
            "44": 77,
            "45": 5,
            "46": 1,
            "47": 71,
            "48": 77,
            "49": 77,
            "52": 0,
            "55": 149
          },
          "Branches": [
            {
              "Line": 34,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4
            },
            {
              "Line": 34,
              "Offset": 24,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 149
            },
            {
              "Line": 37,
              "Offset": 302,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 77
            },
            {
              "Line": 40,
              "Offset": 105,
              "EndOffset": 110,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 77
            },
            {
              "Line": 40,
              "Offset": 141,
              "EndOffset": 146,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 77
            },
            {
              "Line": 43,
              "Offset": 190,
              "EndOffset": 192,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 72
            },
            {
              "Line": 43,
              "Offset": 190,
              "EndOffset": 203,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 5
            },
            {
              "Line": 43,
              "Offset": 199,
              "EndOffset": 218,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 1
            },
            {
              "Line": 43,
              "Offset": 199,
              "EndOffset": 242,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 71
            },
            {
              "Line": 40,
              "Offset": 105,
              "EndOffset": 278,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 141,
              "EndOffset": 278,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 302,
              "EndOffset": 307,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 149
            }
          ]
        },
        "System.Type Expressif.Functions.BaseExpressionFactory::GetFunctionType(System.String)": {
          "Lines": {
            "60": 69,
            "61": 69,
            "62": 6,
            "63": 63,
            "67": 8,
            "68": 8,
            "69": 2560,
            "70": 2560,
            "71": 2560,
            "72": 2560,
            "73": 8,
            "74": 8
          },
          "Branches": [
            {
              "Line": 61,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 61,
              "Offset": 19,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 63
            },
            {
              "Line": 67,
              "Offset": 56,
              "EndOffset": 58,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 67,
              "Offset": 56,
              "EndOffset": 76,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 8
            },
            {
              "Line": 69,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2416
            },
            {
              "Line": 69,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2160
            },
            {
              "Line": 69,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 8
            },
            {
              "Line": 69,
              "Offset": 6,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2552
            },
            {
              "Line": 69,
              "Offset": 14,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2552
            },
            {
              "Line": 69,
              "Offset": 38,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2552
            }
          ]
        },
        "System.Reflection.ConstructorInfo Expressif.Functions.BaseExpressionFactory::GetMatchingConstructor(System.Type,System.Int32)": {
          "Lines": {
            "78": 398,
            "79": 171
          },
          "Branches": [
            {
              "Line": 78,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 11
            },
            {
              "Line": 78,
              "Offset": 37,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 160
            }
          ]
        },
        "System.Delegate Expressif.Functions.BaseExpressionFactory::InstantiateScalarDelegate(Expressif.Parsers.IParameter,System.Type,Expressif.Context)": {
          "Lines": {
            "83": 76,
            "84": 76,
            "85": 76,
            "86": 76,
            "87": 76,
            "89": 76,
            "91": 76
          },
          "Branches": [
            {
              "Line": 83,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 83,
              "Offset": 55,
              "EndOffset": 69,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 76
            }
          ]
        },
        "Expressif.Values.IScalarResolver`1<T> Expressif.Functions.BaseExpressionFactory::InstantiateScalarResolver(Expressif.Parsers.IParameter,Expressif.Context)": {
          "Lines": {
            "95": 76,
            "96": 76,
            "97": 60,
            "98": 8,
            "99": 3,
            "100": 5,
            "101": 0,
            "102": 76
          },
          "Branches": [
            {
              "Line": 95,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 16
            },
            {
              "Line": 95,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 8
            },
            {
              "Line": 95,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 5
            },
            {
              "Line": 95,
              "Offset": 8,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 60
            },
            {
              "Line": 95,
              "Offset": 18,
              "EndOffset": 85,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 8
            },
            {
              "Line": 95,
              "Offset": 28,
              "EndOffset": 128,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 3
            },
            {
              "Line": 95,
              "Offset": 38,
              "EndOffset": 171,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 5
            },
            {
              "Line": 95,
              "Offset": 38,
              "EndOffset": 219,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            }
          ]
        },
        "Expressif.Values.IScalarResolver`1<T> Expressif.Functions.BaseExpressionFactory::InstantiateScalarResolver(System.Type,System.Object[])": {
          "Lines": {
            "105": 82
          },
          "Branches": []
        },
        "System.Delegate Expressif.Functions.BaseExpressionFactory::InstantiateIntervalDelegate(Expressif.Parsers.IParameter,System.Type,Expressif.Context)": {
          "Lines": {
            "109": 1,
            "110": 0,
            "112": 1,
            "114": 1,
            "115": 1,
            "116": 1,
            "118": 1,
            "120": 1,
            "121": 1,
            "123": 1,
            "124": 1
          },
          "Branches": [
            {
              "Line": 109,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 8,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 114,
              "Offset": 131,
              "EndOffset": 133,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 114,
              "Offset": 131,
              "EndOffset": 145,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            }
          ]
        },
        "System.Delegate Expressif.Functions.BaseExpressionFactory::InstantiateInputExpressionDelegate(Expressif.Parsers.InputExpressionParameter,System.Type,Expressif.Context)": {
          "Lines": {
            "129": 5,
            "130": 22,
            "131": 6,
            "132": 5,
            "134": 5,
            "136": 5,
            "137": 5,
            "138": 5,
            "140": 5,
            "142": 5,
            "143": 5,
            "145": 5,
            "146": 5
          },
          "Branches": [
            {
              "Line": 130,
              "Offset": 69,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6
            },
            {
              "Line": 130,
              "Offset": 69,
              "EndOffset": 71,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 5
            },
            {
              "Line": 136,
              "Offset": 176,
              "EndOffset": 178,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 136,
              "Offset": 176,
              "EndOffset": 190,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 5
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\ChainFunction.cs": {
      "Expressif.Functions.ChainFunction": {
        "System.Collections.Generic.IEnumerable`1<Expressif.Functions.IFunction> Expressif.Functions.ChainFunction::get_Functions()": {
          "Lines": {
            "12": 24
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.ChainFunction::Evaluate(System.Object)": {
          "Lines": {
            "18": 65
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 24
            },
            {
              "Line": 18,
              "Offset": 14,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Expressif.Functions.ChainFunction::.ctor(System.Collections.Generic.IEnumerable`1<Expressif.Functions.IFunction>)": {
          "Lines": {
            "14": 23,
            "15": 23
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\ExpressionFactory.cs": {
      "Expressif.Functions.ExpressionFactory": {
        "Sprache.Parser`1<Expressif.Parsers.Expression> Expressif.Functions.ExpressionFactory::get_Parser()": {
          "Lines": {
            "18": 72
          },
          "Branches": []
        },
        "Expressif.Functions.IFunction Expressif.Functions.ExpressionFactory::Instantiate(System.String,Expressif.Context)": {
          "Lines": {
            "22": 8,
            "24": 8,
            "25": 44,
            "26": 14,
            "27": 8
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 69,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 14
            },
            {
              "Line": 25,
              "Offset": 69,
              "EndOffset": 71,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 8
            }
          ]
        },
        "Expressif.Functions.IFunction Expressif.Functions.ExpressionFactory::Instantiate(System.Type,Expressif.Parsers.IParameter[],Expressif.Context)": {
          "Lines": {
            "31": 23
          },
          "Branches": []
        },
        "System.Collections.Generic.IDictionary`2<System.String,System.Type> Expressif.Functions.ExpressionFactory::Initialize()": {
          "Lines": {
            "35": 29,
            "36": 29,
            "37": 29,
            "38": 4756,
            "40": 2349,
            "41": 8700,
            "42": 2001,
            "44": 29
          },
          "Branches": [
            {
              "Line": 38,
              "Offset": 100,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2349
            },
            {
              "Line": 41,
              "Offset": 92,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2001
            },
            {
              "Line": 41,
              "Offset": 92,
              "EndOffset": 94,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2378
            },
            {
              "Line": 38,
              "Offset": 100,
              "EndOffset": 102,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 29
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\ExpressionMember.cs": {
      "Expressif.Functions.ExpressionMember": {
        "System.Type Expressif.Functions.ExpressionMember::get_Type()": {
          "Lines": {
            "12": 196
          },
          "Branches": []
        },
        "Expressif.Functions.IFunction Expressif.Functions.ExpressionMember::Build(Expressif.Context,Expressif.Functions.ExpressionFactory)": {
          "Lines": {
            "16": 17,
            "17": 62,
            "19": 14,
            "20": 14,
            "21": 0,
            "22": 14,
            "23": 14,
            "25": 17
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 92,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 14
            },
            {
              "Line": 19,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 34,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 14
            },
            {
              "Line": 22,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 43,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 14
            },
            {
              "Line": 22,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 55,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 14
            },
            {
              "Line": 17,
              "Offset": 92,
              "EndOffset": 94,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 17
            }
          ]
        },
        "System.Void Expressif.Functions.ExpressionMember::.ctor(System.Type,System.Object[])": {
          "Lines": {
            "13": 42,
            "14": 42,
            "15": 42,
            "18": 42,
            "24": 42,
            "26": 42,
            "27": 42
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\FunctionAttribute.cs": {
      "Expressif.Functions.FunctionAttribute": {
        "System.String[] Expressif.Functions.FunctionAttribute::get_Aliases()": {
          "Lines": {
            "12": 8181
          },
          "Branches": []
        },
        "System.String Expressif.Functions.FunctionAttribute::get_Prefix()": {
          "Lines": {
            "13": 22624
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.FunctionAttribute::.ctor()": {
          "Lines": {
            "16": 13332
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.FunctionAttribute::.ctor(System.String,System.String[])": {
          "Lines": {
            "18": 16362,
            "19": 16362
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 8686
            },
            {
              "Line": 19,
              "Offset": 10,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 16362
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Text\\TextFunctions.cs": {
      "Expressif.Functions.Text.BaseTextFunction": {
        "System.Object Expressif.Functions.Text.BaseTextFunction::Evaluate(System.Object)": {
          "Lines": {
            "19": 344,
            "20": 344,
            "21": 2,
            "22": 1,
            "23": 1,
            "24": 1,
            "25": 1,
            "26": 336,
            "27": 2,
            "28": 344
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 342
            },
            {
              "Line": 19,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 341
            },
            {
              "Line": 19,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 340
            },
            {
              "Line": 19,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 339
            },
            {
              "Line": 19,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 338
            },
            {
              "Line": 19,
              "Offset": 1,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 19,
              "Offset": 9,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 19,
              "Offset": 17,
              "EndOffset": 65,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 19,
              "Offset": 25,
              "EndOffset": 74,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 1
            },
            {
              "Line": 19,
              "Offset": 33,
              "EndOffset": 83,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 1
            },
            {
              "Line": 19,
              "Offset": 43,
              "EndOffset": 92,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 336
            },
            {
              "Line": 19,
              "Offset": 43,
              "EndOffset": 102,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 2
            }
          ]
        },
        "System.Object Expressif.Functions.Text.BaseTextFunction::EvaluateUncasted(System.Object)": {
          "Lines": {
            "33": 2,
            "34": 2,
            "35": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.BaseTextFunction::EvaluateHighLevelString(System.String)": {
          "Lines": {
            "40": 338,
            "41": 38,
            "43": 300,
            "44": 30,
            "47": 270,
            "48": 34,
            "50": 236,
            "51": 0,
            "53": 236
          },
          "Branches": [
            {
              "Line": 40,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 38
            },
            {
              "Line": 40,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 300
            },
            {
              "Line": 43,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 30
            },
            {
              "Line": 43,
              "Offset": 31,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 270
            },
            {
              "Line": 47,
              "Offset": 51,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 34
            },
            {
              "Line": 47,
              "Offset": 51,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 236
            },
            {
              "Line": 50,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 84,
              "EndOffset": 86,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 71,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 236
            },
            {
              "Line": 50,
              "Offset": 84,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 236
            }
          ]
        },
        "System.Object Expressif.Functions.Text.BaseTextFunction::EvaluateNull()": {
          "Lines": {
            "56": 23
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.BaseTextFunction::EvaluateEmpty()": {
          "Lines": {
            "57": 15
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.BaseTextFunction::EvaluateBlank()": {
          "Lines": {
            "58": 8
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.BaseTextFunction::EvaluateSpecial(System.String)": {
          "Lines": {
            "59": 0
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.TextToHtml": {
        "System.Object Expressif.Functions.Text.TextToHtml::EvaluateString(System.String)": {
          "Lines": {
            "69": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.Lower": {
        "System.Object Expressif.Functions.Text.Lower::EvaluateString(System.String)": {
          "Lines": {
            "80": 18
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.Upper": {
        "System.Object Expressif.Functions.Text.Upper::EvaluateString(System.String)": {
          "Lines": {
            "88": 5
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.Trim": {
        "System.Object Expressif.Functions.Text.Trim::EvaluateBlank()": {
          "Lines": {
            "96": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.Trim::EvaluateString(System.String)": {
          "Lines": {
            "97": 6
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.BaseTextAppend": {
        "System.Func`1<System.String> Expressif.Functions.Text.BaseTextAppend::get_Append()": {
          "Lines": {
            "102": 6
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.BaseTextAppend::EvaluateEmpty()": {
          "Lines": {
            "106": 2
          },
          "Branches": [
            {
              "Line": 106,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        },
        "System.Object Expressif.Functions.Text.BaseTextAppend::EvaluateBlank()": {
          "Lines": {
            "107": 2
          },
          "Branches": [
            {
              "Line": 107,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 107,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        },
        "System.Void Expressif.Functions.Text.BaseTextAppend::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "103": 8,
            "104": 8
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.Prefix": {
        "System.Object Expressif.Functions.Text.Prefix::EvaluateString(System.String)": {
          "Lines": {
            "118": 1
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.Prefix::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "117": 8
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.Suffix": {
        "System.Object Expressif.Functions.Text.Suffix::EvaluateString(System.String)": {
          "Lines": {
            "129": 1
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.Suffix::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "128": 8
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.BaseTextLength": {
        "System.Func`1<System.Int32> Expressif.Functions.Text.BaseTextLength::get_Length()": {
          "Lines": {
            "134": 76
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.BaseTextLength::.ctor(System.Func`1<System.Int32>)": {
          "Lines": {
            "136": 49,
            "137": 49
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.FirstChars": {
        "System.Object Expressif.Functions.Text.FirstChars::EvaluateString(System.String)": {
          "Lines": {
            "150": 9
          },
          "Branches": [
            {
              "Line": 150,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 150,
              "Offset": 17,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 8
            }
          ]
        },
        "System.Void Expressif.Functions.Text.FirstChars::.ctor(System.Func`1<System.Int32>)": {
          "Lines": {
            "147": 22
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.LastChars": {
        "System.Object Expressif.Functions.Text.LastChars::EvaluateString(System.String)": {
          "Lines": {
            "163": 4
          },
          "Branches": [
            {
              "Line": 163,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 163,
              "Offset": 17,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            }
          ]
        },
        "System.Void Expressif.Functions.Text.LastChars::.ctor(System.Func`1<System.Int32>)": {
          "Lines": {
            "160": 12
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.SkipFirstChars": {
        "System.Object Expressif.Functions.Text.SkipFirstChars::EvaluateString(System.String)": {
          "Lines": {
            "176": 5
          },
          "Branches": [
            {
              "Line": 176,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            },
            {
              "Line": 176,
              "Offset": 17,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        },
        "System.Void Expressif.Functions.Text.SkipFirstChars::.ctor(System.Func`1<System.Int32>)": {
          "Lines": {
            "173": 14
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.SkipLastChars": {
        "System.Object Expressif.Functions.Text.SkipLastChars::EvaluateString(System.String)": {
          "Lines": {
            "189": 6
          },
          "Branches": [
            {
              "Line": 189,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4
            },
            {
              "Line": 189,
              "Offset": 17,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        },
        "System.Void Expressif.Functions.Text.SkipLastChars::.ctor(System.Func`1<System.Int32>)": {
          "Lines": {
            "186": 16
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.BasePaddingFunction": {
        "System.Func`1<System.Char> Expressif.Functions.Text.BasePaddingFunction::get_Character()": {
          "Lines": {
            "194": 15
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.BasePaddingFunction::EvaluateEmpty()": {
          "Lines": {
            "200": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.BasePaddingFunction::EvaluateNull()": {
          "Lines": {
            "201": 2
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.BasePaddingFunction::.ctor(System.Func`1<System.Int32>,System.Func`1<System.Char>)": {
          "Lines": {
            "197": 17,
            "198": 17
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.PadRight": {
        "System.Object Expressif.Functions.Text.PadRight::EvaluateString(System.String)": {
          "Lines": {
            "216": 10
          },
          "Branches": [
            {
              "Line": 216,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 9
            },
            {
              "Line": 216,
              "Offset": 17,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Expressif.Functions.Text.PadRight::.ctor(System.Func`1<System.Int32>,System.Func`1<System.Char>)": {
          "Lines": {
            "213": 24
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.PadLeft": {
        "System.Object Expressif.Functions.Text.PadLeft::EvaluateString(System.String)": {
          "Lines": {
            "230": 3
          },
          "Branches": [
            {
              "Line": 230,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 230,
              "Offset": 17,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Expressif.Functions.Text.PadLeft::.ctor(System.Func`1<System.Int32>,System.Func`1<System.Char>)": {
          "Lines": {
            "227": 10
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.WhitespacesToEmpty": {
        "System.Object Expressif.Functions.Text.WhitespacesToEmpty::EvaluateBlank()": {
          "Lines": {
            "239": 5
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.WhitespacesToEmpty::EvaluateString(System.String)": {
          "Lines": {
            "240": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.WhitespacesToNull": {
        "System.Object Expressif.Functions.Text.WhitespacesToNull::EvaluateBlank()": {
          "Lines": {
            "249": 4
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.WhitespacesToNull::EvaluateEmpty()": {
          "Lines": {
            "250": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.WhitespacesToNull::EvaluateString(System.String)": {
          "Lines": {
            "251": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.EmptyToNull": {
        "System.Object Expressif.Functions.Text.EmptyToNull::EvaluateEmpty()": {
          "Lines": {
            "260": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.EmptyToNull::EvaluateString(System.String)": {
          "Lines": {
            "261": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.NullToEmpty": {
        "System.Object Expressif.Functions.Text.NullToEmpty::EvaluateNull()": {
          "Lines": {
            "270": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.NullToEmpty::EvaluateString(System.String)": {
          "Lines": {
            "271": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.HtmlToText": {
        "System.Object Expressif.Functions.Text.HtmlToText::EvaluateString(System.String)": {
          "Lines": {
            "280": 2
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.Length": {
        "System.Object Expressif.Functions.Text.Length::EvaluateSpecial(System.String)": {
          "Lines": {
            "288": 0
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.Length::EvaluateBlank()": {
          "Lines": {
            "289": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.Length::EvaluateEmpty()": {
          "Lines": {
            "290": 5
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.Length::EvaluateNull()": {
          "Lines": {
            "291": 3
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.Length::EvaluateString(System.String)": {
          "Lines": {
            "292": 3
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.Token": {
        "System.Func`1<System.Int32> Expressif.Functions.Text.Token::get_Index()": {
          "Lines": {
            "300": 45
          },
          "Branches": []
        },
        "System.Func`1<System.Char> Expressif.Functions.Text.Token::get_Separator()": {
          "Lines": {
            "301": 71
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.Token::EvaluateBlank()": {
          "Lines": {
            "311": 3
          },
          "Branches": [
            {
              "Line": 311,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 311,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 311,
              "Offset": 6,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 311,
              "Offset": 24,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            }
          ]
        },
        "System.Object Expressif.Functions.Text.Token::EvaluateEmpty()": {
          "Lines": {
            "312": 4
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.Token::EvaluateString(System.String)": {
          "Lines": {
            "315": 45,
            "317": 45,
            "318": 45,
            "319": 45,
            "320": 32,
            "322": 13
          },
          "Branches": [
            {
              "Line": 315,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 21
            },
            {
              "Line": 315,
              "Offset": 6,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 24
            },
            {
              "Line": 319,
              "Offset": 58,
              "EndOffset": 60,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 32
            },
            {
              "Line": 319,
              "Offset": 58,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 13
            }
          ]
        },
        "System.Void Expressif.Functions.Text.Token::.ctor(System.Func`1<System.Int32>)": {
          "Lines": {
            "304": 28,
            "305": 28
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.Token::.ctor(System.Func`1<System.Int32>,System.Func`1<System.Char>)": {
          "Lines": {
            "309": 26,
            "310": 26
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.TokenCount": {
        "System.Func`1<System.Char> Expressif.Functions.Text.TokenCount::get_Separator()": {
          "Lines": {
            "331": 24
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.TokenCount::EvaluateBlank()": {
          "Lines": {
            "339": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.TokenCount::EvaluateString(System.String)": {
          "Lines": {
            "340": 18
          },
          "Branches": []
        },
        "System.Int32 Expressif.Functions.Text.TokenCount::CountToken(System.String)": {
          "Lines": {
            "344": 18,
            "345": 18
          },
          "Branches": [
            {
              "Line": 344,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 344,
              "Offset": 6,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 12
            }
          ]
        },
        "System.Void Expressif.Functions.Text.TokenCount::.ctor()": {
          "Lines": {
            "332": 17,
            "333": 17
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.TokenCount::.ctor(System.Func`1<System.Char>)": {
          "Lines": {
            "336": 7,
            "337": 7
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.TextToDateTime": {
        "System.Func`1<System.String> Expressif.Functions.Text.TextToDateTime::get_Format()": {
          "Lines": {
            "355": 15
          },
          "Branches": []
        },
        "System.Func`1<System.String> Expressif.Functions.Text.TextToDateTime::get_Culture()": {
          "Lines": {
            "356": 17
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.TextToDateTime::EvaluateString(System.String)": {
          "Lines": {
            "369": 15,
            "371": 15,
            "372": 15,
            "374": 0
          },
          "Branches": [
            {
              "Line": 369,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 369,
              "Offset": 16,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 13
            },
            {
              "Line": 371,
              "Offset": 72,
              "EndOffset": 74,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 15
            },
            {
              "Line": 371,
              "Offset": 72,
              "EndOffset": 87,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void Expressif.Functions.Text.TextToDateTime::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "359": 13,
            "360": 26
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.TextToDateTime::.ctor(System.Func`1<System.String>,System.Func`1<System.String>)": {
          "Lines": {
            "364": 2,
            "365": 2
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.RemoveChars": {
        "System.Func`1<System.Char> Expressif.Functions.Text.RemoveChars::get_CharToRemove()": {
          "Lines": {
            "383": 109
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.RemoveChars::EvaluateString(System.String)": {
          "Lines": {
            "391": 9,
            "392": 232,
            "393": 107,
            "394": 80,
            "395": 9
          },
          "Branches": [
            {
              "Line": 392,
              "Offset": 59,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 107
            },
            {
              "Line": 393,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 80
            },
            {
              "Line": 393,
              "Offset": 38,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 107
            },
            {
              "Line": 392,
              "Offset": 59,
              "EndOffset": 61,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 9
            }
          ]
        },
        "System.Object Expressif.Functions.Text.RemoveChars::EvaluateBlank()": {
          "Lines": {
            "400": 2,
            "401": 1,
            "403": 1
          },
          "Branches": [
            {
              "Line": 400,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 400,
              "Offset": 16,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Expressif.Functions.Text.RemoveChars::.ctor(System.Func`1<System.Char>)": {
          "Lines": {
            "386": 13,
            "387": 13
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.TextToMask": {
        "System.Char Expressif.Functions.Text.TextToMask::get_maskChar()": {
          "Lines": {
            "413": 48
          },
          "Branches": []
        },
        "System.Func`1<System.String> Expressif.Functions.Text.TextToMask::get_Mask()": {
          "Lines": {
            "414": 5
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.TextToMask::EvaluateString(System.String)": {
          "Lines": {
            "422": 3,
            "423": 3,
            "424": 3,
            "425": 84,
            "426": 39,
            "427": 24,
            "429": 15,
            "430": 3
          },
          "Branches": [
            {
              "Line": 422,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 422,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 425,
              "Offset": 114,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 39
            },
            {
              "Line": 426,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 24
            },
            {
              "Line": 427,
              "Offset": 65,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 3
            },
            {
              "Line": 427,
              "Offset": 65,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 21
            },
            {
              "Line": 426,
              "Offset": 55,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 15
            },
            {
              "Line": 425,
              "Offset": 114,
              "EndOffset": 116,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 3
            }
          ]
        },
        "System.Object Expressif.Functions.Text.TextToMask::EvaluateBlank()": {
          "Lines": {
            "434": 1
          },
          "Branches": [
            {
              "Line": 434,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 434,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Object Expressif.Functions.Text.TextToMask::EvaluateEmpty()": {
          "Lines": {
            "436": 1
          },
          "Branches": [
            {
              "Line": 436,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 436,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Expressif.Functions.Text.TextToMask::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "417": 6,
            "418": 6
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.MaskToText": {
        "System.Char Expressif.Functions.Text.MaskToText::get_maskChar()": {
          "Lines": {
            "445": 75
          },
          "Branches": []
        },
        "System.Func`1<System.String> Expressif.Functions.Text.MaskToText::get_Mask()": {
          "Lines": {
            "446": 7
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.MaskToText::EvaluateString(System.String)": {
          "Lines": {
            "454": 3,
            "455": 3,
            "456": 3,
            "457": 0,
            "459": 84,
            "460": 39,
            "461": 13,
            "462": 26,
            "463": 0,
            "464": 3
          },
          "Branches": [
            {
              "Line": 454,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 454,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 456,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 456,
              "Offset": 39,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 3
            },
            {
              "Line": 459,
              "Offset": 164,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 39
            },
            {
              "Line": 460,
              "Offset": 77,
              "EndOffset": 79,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 24
            },
            {
              "Line": 460,
              "Offset": 100,
              "EndOffset": 102,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 13
            },
            {
              "Line": 460,
              "Offset": 77,
              "EndOffset": 118,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 26
            },
            {
              "Line": 460,
              "Offset": 100,
              "EndOffset": 118,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 26
            },
            {
              "Line": 462,
              "Offset": 140,
              "EndOffset": 142,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 462,
              "Offset": 140,
              "EndOffset": 153,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 39
            },
            {
              "Line": 459,
              "Offset": 164,
              "EndOffset": 166,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 3
            }
          ]
        },
        "System.Object Expressif.Functions.Text.MaskToText::EvaluateBlank()": {
          "Lines": {
            "468": 2
          },
          "Branches": [
            {
              "Line": 468,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 468,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 468,
              "Offset": 49,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 468,
              "Offset": 49,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            }
          ]
        },
        "System.Object Expressif.Functions.Text.MaskToText::EvaluateEmpty()": {
          "Lines": {
            "470": 2
          },
          "Branches": [
            {
              "Line": 470,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 470,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 470,
              "Offset": 49,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 470,
              "Offset": 49,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            }
          ]
        },
        "System.Void Expressif.Functions.Text.MaskToText::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "449": 8,
            "450": 8
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Text\\TextSubstring.cs": {
      "Expressif.Functions.Text.BaseSubstringFunction": {
        "System.Func`1<System.String> Expressif.Functions.Text.BaseSubstringFunction::get_Substring()": {
          "Lines": {
            "14": 20
          },
          "Branches": []
        },
        "System.Func`1<System.Int32> Expressif.Functions.Text.BaseSubstringFunction::get_Count()": {
          "Lines": {
            "15": 24
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.BaseSubstringFunction::.ctor(System.Func`1<System.String>,System.Func`1<System.Int32>)": {
          "Lines": {
            "16": 24,
            "17": 24
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.AfterSubstring": {
        "System.Object Expressif.Functions.Text.AfterSubstring::EvaluateString(System.String)": {
          "Lines": {
            "36": 10,
            "37": 10,
            "38": 2,
            "40": 8,
            "41": 1,
            "43": 7,
            "44": 7,
            "47": 13,
            "48": 13,
            "49": 13,
            "51": 13,
            "53": 7,
            "54": 1,
            "56": 6
          },
          "Branches": [
            {
              "Line": 37,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 10
            },
            {
              "Line": 37,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 9
            },
            {
              "Line": 37,
              "Offset": 18,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 37,
              "Offset": 31,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 37,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 37,
              "Offset": 44,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 8
            },
            {
              "Line": 40,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 1
            },
            {
              "Line": 40,
              "Offset": 55,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 7
            },
            {
              "Line": 51,
              "Offset": 112,
              "EndOffset": 74,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 13
            },
            {
              "Line": 51,
              "Offset": 98,
              "EndOffset": 100,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 12
            },
            {
              "Line": 51,
              "Offset": 98,
              "EndOffset": 114,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 7
            },
            {
              "Line": 51,
              "Offset": 112,
              "EndOffset": 114,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 7
            },
            {
              "Line": 53,
              "Offset": 116,
              "EndOffset": 118,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 1
            },
            {
              "Line": 53,
              "Offset": 116,
              "EndOffset": 129,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 6
            }
          ]
        },
        "System.Void Expressif.Functions.Text.AfterSubstring::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "27": 19
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.AfterSubstring::.ctor(System.Func`1<System.String>,System.Func`1<System.Int32>)": {
          "Lines": {
            "32": 24
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.BeforeSubstring": {
        "System.Object Expressif.Functions.Text.BeforeSubstring::EvaluateString(System.String)": {
          "Lines": {
            "76": 10,
            "77": 10,
            "78": 2,
            "80": 8,
            "81": 1,
            "83": 7,
            "84": 7,
            "87": 13,
            "88": 13,
            "89": 13,
            "91": 13,
            "93": 7,
            "94": 1,
            "96": 6
          },
          "Branches": [
            {
              "Line": 77,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 10
            },
            {
              "Line": 77,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 9
            },
            {
              "Line": 77,
              "Offset": 18,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 77,
              "Offset": 31,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 77,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 77,
              "Offset": 44,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 8
            },
            {
              "Line": 80,
              "Offset": 59,
              "EndOffset": 61,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 1
            },
            {
              "Line": 80,
              "Offset": 59,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 7
            },
            {
              "Line": 91,
              "Offset": 116,
              "EndOffset": 78,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 13
            },
            {
              "Line": 91,
              "Offset": 102,
              "EndOffset": 104,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 12
            },
            {
              "Line": 91,
              "Offset": 102,
              "EndOffset": 118,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 7
            },
            {
              "Line": 91,
              "Offset": 116,
              "EndOffset": 118,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 7
            },
            {
              "Line": 93,
              "Offset": 120,
              "EndOffset": 122,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 1
            },
            {
              "Line": 93,
              "Offset": 120,
              "EndOffset": 133,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 6
            }
          ]
        },
        "System.Void Expressif.Functions.Text.BeforeSubstring::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "67": 19
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.BeforeSubstring::.ctor(System.Func`1<System.String>,System.Func`1<System.Int32>)": {
          "Lines": {
            "72": 24
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Text\\TextToWithoutDiacritics.cs": {
      "Expressif.Functions.Text.WithoutDiacritics": {
        "System.Object Expressif.Functions.Text.WithoutDiacritics::EvaluateString(System.String)": {
          "Lines": {
            "15": 7
          },
          "Branches": []
        },
        "System.String Expressif.Functions.Text.WithoutDiacritics::RemoveDiacritics(System.String)": {
          "Lines": {
            "25": 7,
            "27": 7,
            "28": 7,
            "29": 7,
            "31": 112,
            "33": 49,
            "34": 49,
            "35": 42,
            "38": 7,
            "41": 0
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 7
            },
            {
              "Line": 31,
              "Offset": 68,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 49
            },
            {
              "Line": 34,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 42
            },
            {
              "Line": 34,
              "Offset": 46,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 49
            },
            {
              "Line": 31,
              "Offset": 68,
              "EndOffset": 70,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 7
            },
            {
              "Line": 25,
              "Offset": 6,
              "EndOffset": 83,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Text\\TextToWithoutWhitespaces.cs": {
      "Expressif.Functions.Text.WithoutWhitespaces": {
        "System.Object Expressif.Functions.Text.WithoutWhitespaces::EvaluateBlank()": {
          "Lines": {
            "15": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Text.WithoutWhitespaces::EvaluateString(System.String)": {
          "Lines": {
            "16": 3
          },
          "Branches": []
        },
        "System.String Expressif.Functions.Text.WithoutWhitespaces::RemoveWhitespaces(System.String)": {
          "Lines": {
            "20": 3,
            "22": 3,
            "23": 3,
            "25": 122,
            "26": 58,
            "28": 3,
            "32": 0
          },
          "Branches": [
            {
              "Line": 20,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            },
            {
              "Line": 25,
              "Offset": 63,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 58
            },
            {
              "Line": 26,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 42
            },
            {
              "Line": 26,
              "Offset": 45,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 16
            },
            {
              "Line": 25,
              "Offset": 63,
              "EndOffset": 65,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 3
            },
            {
              "Line": 20,
              "Offset": 6,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Text\\Tokenizer.cs": {
      "Expressif.Functions.Text.Tokenizer": {
        "System.Char Expressif.Functions.Text.Tokenizer::get_Separator()": {
          "Lines": {
            "17": 27
          },
          "Branches": []
        },
        "System.String[] Expressif.Functions.Text.Tokenizer::Execute(System.String)": {
          "Lines": {
            "21": 27
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Text.Tokenizer::.ctor(System.Char)": {
          "Lines": {
            "18": 27,
            "19": 27
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Text.WhitespaceTokenizer": {
        "System.String[] Expressif.Functions.Text.WhitespaceTokenizer::Execute(System.String)": {
          "Lines": {
            "29": 36,
            "31": 36,
            "32": 36,
            "33": 36,
            "35": 1126,
            "37": 527,
            "39": 331,
            "40": 83,
            "41": 331,
            "43": 196,
            "45": 187,
            "46": 61,
            "47": 187,
            "50": 36,
            "51": 22,
            "53": 36,
            "54": 119,
            "55": 238,
            "57": 83,
            "58": 83,
            "59": 83,
            "61": 36,
            "65": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 6,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 36
            },
            {
              "Line": 35,
              "Offset": 122,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 527
            },
            {
              "Line": 37,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 213
            },
            {
              "Line": 37,
              "Offset": 43,
              "EndOffset": 65,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 331
            },
            {
              "Line": 37,
              "Offset": 63,
              "EndOffset": 65,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 331
            },
            {
              "Line": 39,
              "Offset": 66,
              "EndOffset": 68,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 83
            },
            {
              "Line": 39,
              "Offset": 66,
              "EndOffset": 76,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 331
            },
            {
              "Line": 37,
              "Offset": 63,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 196
            },
            {
              "Line": 43,
              "Offset": 93,
              "EndOffset": 95,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 187
            },
            {
              "Line": 45,
              "Offset": 96,
              "EndOffset": 98,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 61
            },
            {
              "Line": 45,
              "Offset": 96,
              "EndOffset": 106,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 187
            },
            {
              "Line": 43,
              "Offset": 93,
              "EndOffset": 108,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 527
            },
            {
              "Line": 35,
              "Offset": 122,
              "EndOffset": 124,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 36
            },
            {
              "Line": 50,
              "Offset": 125,
              "EndOffset": 127,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 22
            },
            {
              "Line": 50,
              "Offset": 125,
              "EndOffset": 139,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 36
            },
            {
              "Line": 55,
              "Offset": 260,
              "EndOffset": 192,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 83
            },
            {
              "Line": 58,
              "Offset": 238,
              "EndOffset": 240,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 83
            },
            {
              "Line": 58,
              "Offset": 238,
              "EndOffset": 253,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 119
            },
            {
              "Line": 55,
              "Offset": 260,
              "EndOffset": 262,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 36
            },
            {
              "Line": 29,
              "Offset": 6,
              "EndOffset": 283,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Temporal\\TemporalFunctions.cs": {
      "Expressif.Functions.Temporal.BaseTemporalFunction": {
        "System.Object Expressif.Functions.Temporal.BaseTemporalFunction::Evaluate(System.Object)": {
          "Lines": {
            "16": 97,
            "17": 97,
            "18": 6,
            "19": 1,
            "20": 1,
            "21": 6,
            "22": 2,
            "23": 81,
            "24": 97
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 91
            },
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 90
            },
            {
              "Line": 16,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            },
            {
              "Line": 16,
              "Offset": 17,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 89
            },
            {
              "Line": 16,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 6
            },
            {
              "Line": 16,
              "Offset": 34,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 83
            },
            {
              "Line": 16,
              "Offset": 51,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 2
            },
            {
              "Line": 16,
              "Offset": 1,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6
            },
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 16,
              "Offset": 51,
              "EndOffset": 127,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 81
            }
          ]
        },
        "System.Object Expressif.Functions.Temporal.BaseTemporalFunction::EvaluateUncasted(System.Object)": {
          "Lines": {
            "29": 77,
            "30": 5,
            "32": 72,
            "33": 72,
            "34": 72
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 5
            },
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 72
            }
          ]
        },
        "System.Object Expressif.Functions.Temporal.BaseTemporalFunction::EvaluateNull()": {
          "Lines": {
            "37": 8
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.DateTimeToDate": {
        "System.Object Expressif.Functions.Temporal.DateTimeToDate::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "46": 6
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.Age": {
        "System.Object Expressif.Functions.Temporal.Age::EvaluateNull()": {
          "Lines": {
            "54": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.Age::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "58": 2,
            "60": 2,
            "62": 2
          },
          "Branches": [
            {
              "Line": 62,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 62,
              "Offset": 36,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Expressif.Functions.Temporal.FirstOfMonth": {
        "System.Object Expressif.Functions.Temporal.FirstOfMonth::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "71": 3
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.FirstOfYear": {
        "System.Object Expressif.Functions.Temporal.FirstOfYear::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "79": 3
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.LastOfMonth": {
        "System.Object Expressif.Functions.Temporal.LastOfMonth::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "87": 4
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.LastOfYear": {
        "System.Object Expressif.Functions.Temporal.LastOfYear::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "95": 3
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.NextDay": {
        "System.Object Expressif.Functions.Temporal.NextDay::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "103": 3
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.NextMonth": {
        "System.Object Expressif.Functions.Temporal.NextMonth::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "111": 3
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.NextYear": {
        "System.Object Expressif.Functions.Temporal.NextYear::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "119": 2
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.PreviousDay": {
        "System.Object Expressif.Functions.Temporal.PreviousDay::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "127": 4
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.PreviousMonth": {
        "System.Object Expressif.Functions.Temporal.PreviousMonth::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "135": 4
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.PreviousYear": {
        "System.Object Expressif.Functions.Temporal.PreviousYear::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "143": 2
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.Clamp": {
        "System.Func`1<System.DateTime> Expressif.Functions.Temporal.Clamp::get_Min()": {
          "Lines": {
            "152": 4
          },
          "Branches": []
        },
        "System.Func`1<System.DateTime> Expressif.Functions.Temporal.Clamp::get_Max()": {
          "Lines": {
            "153": 3
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.Clamp::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "161": 3
          },
          "Branches": [
            {
              "Line": 161,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 161,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 161,
              "Offset": 36,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 161,
              "Offset": 17,
              "EndOffset": 54,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Expressif.Functions.Temporal.Clamp::.ctor(System.Func`1<System.DateTime>,System.Func`1<System.DateTime>)": {
          "Lines": {
            "157": 3,
            "158": 3
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.SetTime": {
        "System.Func`1<System.String> Expressif.Functions.Temporal.SetTime::get_Instant()": {
          "Lines": {
            "170": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.SetTime::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "178": 2,
            "179": 2
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Temporal.SetTime::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "173": 2,
            "174": 2
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.NullToDate": {
        "System.Func`1<System.DateTime> Expressif.Functions.Temporal.NullToDate::get_Default()": {
          "Lines": {
            "189": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.NullToDate::EvaluateNull()": {
          "Lines": {
            "195": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.NullToDate::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "196": 1
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Temporal.NullToDate::.ctor(System.Func`1<System.DateTime>)": {
          "Lines": {
            "192": 2,
            "193": 2
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.InvalidToDate": {
        "System.Func`1<System.DateTime> Expressif.Functions.Temporal.InvalidToDate::get_Default()": {
          "Lines": {
            "205": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.InvalidToDate::EvaluateNull()": {
          "Lines": {
            "211": 3
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.InvalidToDate::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "212": 0
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.InvalidToDate::EvaluateUncasted(System.Object)": {
          "Lines": {
            "215": 4,
            "216": 1,
            "218": 3,
            "220": 3,
            "221": 4,
            "222": 3
          },
          "Branches": [
            {
              "Line": 215,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 215,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            }
          ]
        },
        "System.Void Expressif.Functions.Temporal.InvalidToDate::.ctor(System.Func`1<System.DateTime>)": {
          "Lines": {
            "208": 6,
            "209": 6
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.FloorHour": {
        "System.Object Expressif.Functions.Temporal.FloorHour::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "231": 4
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.CeilingHour": {
        "System.Object Expressif.Functions.Temporal.CeilingHour::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "240": 4
          },
          "Branches": [
            {
              "Line": 240,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            },
            {
              "Line": 240,
              "Offset": 28,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        }
      },
      "Expressif.Functions.Temporal.FloorMinute": {
        "System.Object Expressif.Functions.Temporal.FloorMinute::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "249": 4
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.CeilingMinute": {
        "System.Object Expressif.Functions.Temporal.CeilingMinute::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "258": 4
          },
          "Branches": [
            {
              "Line": 258,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 258,
              "Offset": 22,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        }
      },
      "Expressif.Functions.Temporal.Forward": {
        "System.Func`1<System.Int32> Expressif.Functions.Temporal.Forward::get_Times()": {
          "Lines": {
            "267": 8
          },
          "Branches": []
        },
        "System.Func`1<System.String> Expressif.Functions.Temporal.Forward::get_TimeSpan()": {
          "Lines": {
            "268": 8
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.Forward::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "280": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Temporal.Forward::.ctor(System.Func`1<System.String>,System.Func`1<System.Int32>)": {
          "Lines": {
            "272": 8,
            "273": 8
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Temporal.Forward::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "277": 0
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.Back": {
        "System.Object Expressif.Functions.Temporal.Back::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "300": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Temporal.Back::.ctor(System.Func`1<System.String>,System.Func`1<System.Int32>)": {
          "Lines": {
            "293": 8
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Temporal.Back::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "297": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Temporal\\TimeZoneFunctions.cs": {
      "Expressif.Functions.Temporal.UtcToLocal": {
        "System.Func`1<System.String> Expressif.Functions.Temporal.UtcToLocal::get_TimeZoneLabel()": {
          "Lines": {
            "14": 12
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Temporal.UtcToLocal::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "22": 8
          },
          "Branches": []
        },
        "System.TimeZoneInfo Expressif.Functions.Temporal.UtcToLocal::InstantiateTimeZoneInfo(System.String)": {
          "Lines": {
            "26": 12,
            "27": 1704,
            "28": 999,
            "30": 12
          },
          "Branches": [
            {
              "Line": 27,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 7
            },
            {
              "Line": 27,
              "Offset": 45,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 12
            },
            {
              "Line": 30,
              "Offset": 67,
              "EndOffset": 69,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 67,
              "EndOffset": 97,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 12
            }
          ]
        },
        "System.String[] Expressif.Functions.Temporal.UtcToLocal::Tokenize(System.String)": {
          "Lines": {
            "34": 987,
            "35": 987,
            "36": 987,
            "37": 987,
            "38": 987
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Temporal.UtcToLocal::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "16": 12,
            "18": 12,
            "19": 12
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Temporal.LocalToUtc": {
        "System.Object Expressif.Functions.Temporal.LocalToUtc::EvaluateDateTime(System.DateTime)": {
          "Lines": {
            "52": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Temporal.LocalToUtc::.ctor(System.Func`1<System.String>)": {
          "Lines": {
            "48": 4,
            "49": 4
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Special\\Neutral.cs": {
      "Expressif.Functions.Special.Neutral": {
        "System.Object Expressif.Functions.Special.Neutral::Evaluate(System.Object)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Special\\SpecialFunctions.cs": {
      "Expressif.Functions.Special.BaseSpecialFunction": {
        "System.Object Expressif.Functions.Special.BaseSpecialFunction::Evaluate(System.Object)": {
          "Lines": {
            "18": 40,
            "19": 40,
            "20": 3,
            "21": 3,
            "22": 3,
            "23": 3,
            "24": 3,
            "25": 3,
            "26": 3,
            "27": 17,
            "28": 2,
            "29": 40
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 37
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 34
            },
            {
              "Line": 18,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 31
            },
            {
              "Line": 18,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 28
            },
            {
              "Line": 18,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 25
            },
            {
              "Line": 18,
              "Offset": 41,
              "EndOffset": 43,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 22
            },
            {
              "Line": 18,
              "Offset": 49,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 19
            },
            {
              "Line": 18,
              "Offset": 1,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 3
            },
            {
              "Line": 18,
              "Offset": 17,
              "EndOffset": 81,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 3
            },
            {
              "Line": 18,
              "Offset": 25,
              "EndOffset": 90,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 3
            },
            {
              "Line": 18,
              "Offset": 33,
              "EndOffset": 99,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 3
            },
            {
              "Line": 18,
              "Offset": 41,
              "EndOffset": 108,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 3
            },
            {
              "Line": 18,
              "Offset": 49,
              "EndOffset": 117,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 3
            },
            {
              "Line": 18,
              "Offset": 59,
              "EndOffset": 126,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 17
            },
            {
              "Line": 18,
              "Offset": 59,
              "EndOffset": 136,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 2
            }
          ]
        },
        "System.Object Expressif.Functions.Special.BaseSpecialFunction::EvaluateUncasted(System.Object)": {
          "Lines": {
            "34": 2,
            "35": 2,
            "36": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.BaseSpecialFunction::EvaluateHighLevelString(System.String)": {
          "Lines": {
            "41": 19,
            "42": 3,
            "44": 16,
            "45": 3,
            "47": 13,
            "48": 3,
            "50": 10,
            "51": 2,
            "53": 8,
            "54": 3,
            "56": 5
          },
          "Branches": [
            {
              "Line": 41,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            },
            {
              "Line": 41,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 16
            },
            {
              "Line": 44,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 3
            },
            {
              "Line": 44,
              "Offset": 31,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 13
            },
            {
              "Line": 47,
              "Offset": 51,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 3
            },
            {
              "Line": 47,
              "Offset": 51,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 10
            },
            {
              "Line": 50,
              "Offset": 76,
              "EndOffset": 78,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 76,
              "EndOffset": 85,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 8
            },
            {
              "Line": 53,
              "Offset": 101,
              "EndOffset": 103,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 3
            },
            {
              "Line": 53,
              "Offset": 101,
              "EndOffset": 110,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 5
            }
          ]
        }
      },
      "Expressif.Functions.Special.NullToValue": {
        "System.Object Expressif.Functions.Special.NullToValue::EvaluateNull()": {
          "Lines": {
            "72": 4
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.NullToValue::EvaluateEmpty()": {
          "Lines": {
            "73": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.NullToValue::EvaluateBlank()": {
          "Lines": {
            "74": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.NullToValue::EvaluateAny()": {
          "Lines": {
            "75": 1
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.NullToValue::EvaluateValue()": {
          "Lines": {
            "76": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.NullToValue::EvaluateString(System.String)": {
          "Lines": {
            "77": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Special.AnyToAny": {
        "System.Object Expressif.Functions.Special.AnyToAny::EvaluateNull()": {
          "Lines": {
            "85": 4
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.AnyToAny::EvaluateEmpty()": {
          "Lines": {
            "86": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.AnyToAny::EvaluateBlank()": {
          "Lines": {
            "87": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.AnyToAny::EvaluateAny()": {
          "Lines": {
            "88": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.AnyToAny::EvaluateValue()": {
          "Lines": {
            "89": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.AnyToAny::EvaluateString(System.String)": {
          "Lines": {
            "90": 2
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Special.ValueToValue": {
        "System.Object Expressif.Functions.Special.ValueToValue::EvaluateNull()": {
          "Lines": {
            "98": 4
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.ValueToValue::EvaluateEmpty()": {
          "Lines": {
            "99": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.ValueToValue::EvaluateBlank()": {
          "Lines": {
            "100": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.ValueToValue::EvaluateAny()": {
          "Lines": {
            "101": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.ValueToValue::EvaluateValue()": {
          "Lines": {
            "102": 2
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.Special.ValueToValue::EvaluateString(System.String)": {
          "Lines": {
            "103": 2
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Serializer\\ExpressionMemberSerializer.cs": {
      "Expressif.Functions.Serializer.ExpressionMemberSerializer": {
        "Expressif.Functions.Serializer.ParameterSerializer Expressif.Functions.Serializer.ExpressionMemberSerializer::get_ParameterSerializer()": {
          "Lines": {
            "13": 15
          },
          "Branches": []
        },
        "System.String Expressif.Functions.Serializer.ExpressionMemberSerializer::Serialize(Expressif.Functions.ExpressionMember)": {
          "Lines": {
            "23": 18,
            "24": 66,
            "26": 15,
            "27": 15,
            "28": 0,
            "29": 15,
            "30": 15,
            "32": 18,
            "33": 18,
            "34": 10,
            "36": 8
          },
          "Branches": [
            {
              "Line": 24,
              "Offset": 111,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 15
            },
            {
              "Line": 26,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 44,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 15
            },
            {
              "Line": 29,
              "Offset": 54,
              "EndOffset": 56,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 54,
              "EndOffset": 59,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 15
            },
            {
              "Line": 29,
              "Offset": 67,
              "EndOffset": 69,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 67,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 15
            },
            {
              "Line": 24,
              "Offset": 111,
              "EndOffset": 113,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 18
            },
            {
              "Line": 33,
              "Offset": 136,
              "EndOffset": 138,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 10
            },
            {
              "Line": 33,
              "Offset": 136,
              "EndOffset": 166,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 8
            }
          ]
        },
        "System.Void Expressif.Functions.Serializer.ExpressionMemberSerializer::.ctor()": {
          "Lines": {
            "16": 60
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Serializer.ExpressionMemberSerializer::.ctor(Expressif.Functions.Serializer.ParameterSerializer)": {
          "Lines": {
            "18": 33,
            "19": 33
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 9,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 33
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Serializer\\ExpressionSerializer.cs": {
      "Expressif.Functions.Serializer.ExpressionSerializer": {
        "Expressif.Functions.Serializer.ExpressionMemberSerializer Expressif.Functions.Serializer.ExpressionSerializer::get_ExpressionMemberSerializer()": {
          "Lines": {
            "11": 16
          },
          "Branches": []
        },
        "System.String Expressif.Functions.Serializer.ExpressionSerializer::Serialize(Expressif.ExpressionBuilder)": {
          "Lines": {
            "20": 8,
            "21": 50,
            "24": 17,
            "25": 17,
            "26": 16,
            "27": 1,
            "28": 0,
            "29": 17,
            "31": 8,
            "32": 8
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 132,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 17
            },
            {
              "Line": 24,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 24,
              "Offset": 40,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 16
            },
            {
              "Line": 24,
              "Offset": 52,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 24,
              "Offset": 52,
              "EndOffset": 100,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 132,
              "EndOffset": 134,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 8
            }
          ]
        },
        "System.Void Expressif.Functions.Serializer.ExpressionSerializer::.ctor()": {
          "Lines": {
            "14": 50
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Serializer.ExpressionSerializer::.ctor(Expressif.Functions.Serializer.ExpressionMemberSerializer)": {
          "Lines": {
            "15": 27,
            "16": 27
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 27
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Serializer\\ParameterSerializer.cs": {
      "Expressif.Functions.Serializer.ParameterSerializer": {
        "System.String Expressif.Functions.Serializer.ParameterSerializer::Serialize(Expressif.Parsers.IParameter)": {
          "Lines": {
            "14": 40,
            "15": 40,
            "16": 34,
            "17": 66,
            "18": 66,
            "19": 66,
            "20": 34,
            "21": 34,
            "22": 2,
            "23": 2,
            "24": 2,
            "25": 0,
            "26": 40
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 14,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 4
            },
            {
              "Line": 14,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 14,
              "Offset": 8,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 34
            },
            {
              "Line": 16,
              "Offset": 87,
              "EndOffset": 89,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 30
            },
            {
              "Line": 16,
              "Offset": 87,
              "EndOffset": 97,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 4
            },
            {
              "Line": 14,
              "Offset": 18,
              "EndOffset": 122,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 14,
              "Offset": 28,
              "EndOffset": 142,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2
            },
            {
              "Line": 14,
              "Offset": 38,
              "EndOffset": 167,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 2
            },
            {
              "Line": 14,
              "Offset": 38,
              "EndOffset": 212,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Numeric\\NumericFunctions.cs": {
      "Expressif.Functions.Numeric.BaseNumericFunction": {
        "System.Object Expressif.Functions.Numeric.BaseNumericFunction::Evaluate(System.Object)": {
          "Lines": {
            "18": 146,
            "19": 146,
            "20": 2,
            "21": 1,
            "22": 5,
            "23": 138,
            "24": 146
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 144
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 143
            },
            {
              "Line": 18,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 5
            },
            {
              "Line": 18,
              "Offset": 1,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 18,
              "Offset": 17,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 138
            }
          ]
        },
        "System.Object Expressif.Functions.Numeric.BaseNumericFunction::EvaluateUncasted(System.Object)": {
          "Lines": {
            "29": 138,
            "30": 45,
            "32": 93,
            "33": 93,
            "34": 93
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 123
            },
            {
              "Line": 29,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 108
            },
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 45
            },
            {
              "Line": 29,
              "Offset": 24,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 45
            },
            {
              "Line": 29,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 45
            },
            {
              "Line": 29,
              "Offset": 37,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 93
            }
          ]
        },
        "System.Object Expressif.Functions.Numeric.BaseNumericFunction::EvaluateNull()": {
          "Lines": {
            "37": 44
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Numeric.BaseNumericFunction::.ctor()": {
          "Lines": {
            "13": 151,
            "14": 151
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.NullToZero": {
        "System.Object Expressif.Functions.Numeric.NullToZero::EvaluateNull()": {
          "Lines": {
            "47": 4
          },
          "Branches": []
        },
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.NullToZero::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "48": 8
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Ceiling": {
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Ceiling::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "59": 7
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Floor": {
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Floor::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "67": 7
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Integer": {
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Integer::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "75": 9
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Round": {
        "System.Func`1<System.Int32> Expressif.Functions.Numeric.Round::get_Digits()": {
          "Lines": {
            "83": 18
          },
          "Branches": []
        },
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Round::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "89": 12
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Numeric.Round::.ctor(System.Func`1<System.Int32>)": {
          "Lines": {
            "86": 21,
            "87": 21
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Clip": {
        "System.Func`1<System.Decimal> Expressif.Functions.Numeric.Clip::get_Min()": {
          "Lines": {
            "97": 8
          },
          "Branches": []
        },
        "System.Func`1<System.Decimal> Expressif.Functions.Numeric.Clip::get_Max()": {
          "Lines": {
            "98": 7
          },
          "Branches": []
        },
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Clip::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "106": 7
          },
          "Branches": [
            {
              "Line": 106,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 106,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 5
            },
            {
              "Line": 106,
              "Offset": 36,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 106,
              "Offset": 17,
              "EndOffset": 54,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Expressif.Functions.Numeric.Clip::.ctor(System.Func`1<System.Decimal>,System.Func`1<System.Decimal>)": {
          "Lines": {
            "102": 10,
            "103": 10
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.BaseNumericArithmetic": {
        "System.Func`1<System.Decimal> Expressif.Functions.Numeric.BaseNumericArithmetic::get_Value()": {
          "Lines": {
            "111": 34
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Numeric.BaseNumericArithmetic::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "113": 54,
            "114": 54
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Add": {
        "System.Func`1<System.Int32> Expressif.Functions.Numeric.Add::get_Times()": {
          "Lines": {
            "122": 24
          },
          "Branches": []
        },
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Add::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "133": 12
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Numeric.Add::.ctor(System.Func`1<System.Decimal>,System.Func`1<System.Int32>)": {
          "Lines": {
            "127": 82
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Numeric.Add::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "130": 76
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Subtract": {
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Subtract::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "150": 12
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Numeric.Subtract::.ctor(System.Func`1<System.Decimal>,System.Func`1<System.Int32>)": {
          "Lines": {
            "144": 12
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Numeric.Subtract::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "147": 28
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Increment": {
        "System.Void Expressif.Functions.Numeric.Increment::.ctor()": {
          "Lines": {
            "159": 21
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Decrement": {
        "System.Void Expressif.Functions.Numeric.Decrement::.ctor()": {
          "Lines": {
            "168": 18
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Multiply": {
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Multiply::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "181": 4
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Numeric.Multiply::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "178": 14
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Divide": {
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Divide::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "194": 3
          },
          "Branches": [
            {
              "Line": 194,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            },
            {
              "Line": 194,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Expressif.Functions.Numeric.Divide::.ctor(System.Func`1<System.Decimal>)": {
          "Lines": {
            "191": 12
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Invert": {
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Invert::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "205": 7
          },
          "Branches": [
            {
              "Line": 205,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 205,
              "Offset": 11,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Expressif.Functions.Numeric.Invert::.ctor()": {
          "Lines": {
            "202": 10,
            "203": 10
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Numeric\\SignFunctions.cs": {
      "Expressif.Functions.Numeric.Sign": {
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Sign::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "14": 5
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Numeric.Absolute": {
        "System.Nullable`1<System.Decimal> Expressif.Functions.Numeric.Absolute::EvaluateNumeric(System.Decimal)": {
          "Lines": {
            "22": 5
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\IO\\FileFunctions.cs": {
      "Expressif.Functions.IO.BaseFileFunction": {
        "System.Func`2<System.String,Expressif.Functions.IO.IFileInfo> Expressif.Functions.IO.BaseFileFunction::get_FileInfoInitializer()": {
          "Lines": {
            "11": 15
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.IO.BaseFileFunction::EvaluateNull()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.IO.BaseFileFunction::EvaluateEmpty()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.IO.BaseFileFunction::EvaluateBlank()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.IO.BaseFileFunction::EvaluateSpecial(System.String)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.IO.BaseFileFunction::EvaluateString(System.String)": {
          "Lines": {
            "19": 5,
            "20": 5,
            "21": 0,
            "22": 5
          },
          "Branches": [
            {
              "Line": 20,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 19,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 5
            }
          ]
        },
        "System.Void Expressif.Functions.IO.BaseFileFunction::SetFileInfoInitializer(System.Func`2<System.String,Expressif.Functions.IO.IFileInfo>)": {
          "Lines": {
            "28": 5
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.IO.BaseFileFunction::.ctor()": {
          "Lines": {
            "12": 10
          },
          "Branches": []
        }
      },
      "Expressif.Functions.IO.Size": {
        "System.Object Expressif.Functions.IO.Size::EvaluateFileInfo(Expressif.Functions.IO.IFileInfo)": {
          "Lines": {
            "36": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.IO.CreationDateTime": {
        "System.Object Expressif.Functions.IO.CreationDateTime::EvaluateFileInfo(Expressif.Functions.IO.IFileInfo)": {
          "Lines": {
            "44": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.IO.CreationDateTimeUtc": {
        "System.Object Expressif.Functions.IO.CreationDateTimeUtc::EvaluateFileInfo(Expressif.Functions.IO.IFileInfo)": {
          "Lines": {
            "52": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.IO.UpdateDateTime": {
        "System.Object Expressif.Functions.IO.UpdateDateTime::EvaluateFileInfo(Expressif.Functions.IO.IFileInfo)": {
          "Lines": {
            "60": 1
          },
          "Branches": []
        }
      },
      "Expressif.Functions.IO.UpdateDateTimeUtc": {
        "System.Object Expressif.Functions.IO.UpdateDateTimeUtc::EvaluateFileInfo(Expressif.Functions.IO.IFileInfo)": {
          "Lines": {
            "68": 1
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\IO\\FileInfoWrapper.cs": {
      "Expressif.Functions.IO.FileInfoWrapper": {
        "System.IO.FileInfo Expressif.Functions.IO.FileInfoWrapper::get_FileInfo()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.DateTime Expressif.Functions.IO.FileInfoWrapper::get_LastWriteTimeUtc()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.DateTime Expressif.Functions.IO.FileInfoWrapper::get_LastWriteTime()": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.DateTime Expressif.Functions.IO.FileInfoWrapper::get_CreationTimeUtc()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.DateTime Expressif.Functions.IO.FileInfoWrapper::get_CreationTime()": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Int64 Expressif.Functions.IO.FileInfoWrapper::get_Length()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Boolean Expressif.Functions.IO.FileInfoWrapper::get_Exists()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.IO.FileInfoWrapper::.ctor(System.String)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\IO\\PathFunctions.cs": {
      "Expressif.Functions.IO.BasePathFunction": {
        "System.Object Expressif.Functions.IO.BasePathFunction::EvaluateNull()": {
          "Lines": {
            "12": 5
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.IO.BasePathFunction::EvaluateEmpty()": {
          "Lines": {
            "13": 5
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.IO.BasePathFunction::EvaluateBlank()": {
          "Lines": {
            "14": 5
          },
          "Branches": []
        },
        "System.Object Expressif.Functions.IO.BasePathFunction::EvaluateSpecial(System.String)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.IO.BasePathFunction::.ctor()": {
          "Lines": {
            "11": 90
          },
          "Branches": []
        }
      },
      "Expressif.Functions.IO.Filename": {
        "System.Object Expressif.Functions.IO.Filename::EvaluateString(System.String)": {
          "Lines": {
            "23": 6
          },
          "Branches": []
        }
      },
      "Expressif.Functions.IO.FilenameWithoutExtension": {
        "System.Object Expressif.Functions.IO.FilenameWithoutExtension::EvaluateString(System.String)": {
          "Lines": {
            "31": 6
          },
          "Branches": []
        }
      },
      "Expressif.Functions.IO.Extension": {
        "System.Object Expressif.Functions.IO.Extension::EvaluateString(System.String)": {
          "Lines": {
            "39": 6
          },
          "Branches": []
        }
      },
      "Expressif.Functions.IO.Root": {
        "System.Object Expressif.Functions.IO.Root::EvaluateString(System.String)": {
          "Lines": {
            "47": 6
          },
          "Branches": [
            {
              "Line": 47,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 7,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6
            }
          ]
        }
      },
      "Expressif.Functions.IO.Directory": {
        "System.Object Expressif.Functions.IO.Directory::EvaluateString(System.String)": {
          "Lines": {
            "57": 6,
            "58": 6,
            "59": 6
          },
          "Branches": [
            {
              "Line": 57,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 5
            },
            {
              "Line": 57,
              "Offset": 6,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 57,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 37,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            }
          ]
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Introspection\\BaseIntrospector.cs": {
      "Expressif.Functions.Introspection.BaseIntrospector": {
        "Expressif.Functions.Introspection.ITypesProbe Expressif.Functions.Introspection.BaseIntrospector::get_Probe()": {
          "Lines": {
            "13": 52
          },
          "Branches": []
        },
        "System.Type[] Expressif.Functions.Introspection.BaseIntrospector::get_Types()": {
          "Lines": {
            "16": 172
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 52
            },
            {
              "Line": 16,
              "Offset": 7,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 172
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<Expressif.Functions.Introspection.BaseIntrospector/AttributeInfo`1<T>> Expressif.Functions.Introspection.BaseIntrospector::LocateAttribute()": {
          "Lines": {
            "23": 46612,
            "24": 11477,
            "25": 11477,
            "26": 11477,
            "27": 11477,
            "28": 11477,
            "29": 11477
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 23,
              "Offset": 12,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 172
            },
            {
              "Line": 24,
              "Offset": 48,
              "EndOffset": 50,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            },
            {
              "Line": 24,
              "Offset": 48,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 172
            },
            {
              "Line": 24,
              "Offset": 84,
              "EndOffset": 86,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 24,
              "Offset": 84,
              "EndOffset": 109,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 172
            },
            {
              "Line": 24,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 13,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 11305
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<Expressif.Functions.Introspection.ParameterInfo> Expressif.Functions.Introspection.BaseIntrospector::BuildParameters(Expressif.Functions.Introspection.CtorInfo[])": {
          "Lines": {
            "33": 17224,
            "34": 7912,
            "35": 7912,
            "36": 22584,
            "37": 20187,
            "38": 7912,
            "39": 10915,
            "40": 7912,
            "41": 7912,
            "42": 11305
          },
          "Branches": [
            {
              "Line": 36,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 7912
            },
            {
              "Line": 36,
              "Offset": 13,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 10888
            },
            {
              "Line": 37,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 7912
            },
            {
              "Line": 37,
              "Offset": 13,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 9097
            }
          ]
        },
        "System.Void Expressif.Functions.Introspection.BaseIntrospector::.ctor(Expressif.Functions.Introspection.ITypesProbe)": {
          "Lines": {
            "18": 52,
            "19": 52
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Introspection.BaseIntrospector/AttributeInfo`1": {
        "System.Type Expressif.Functions.Introspection.BaseIntrospector/AttributeInfo`1::get_Type()": {
          "Lines": {
            "12": 161659
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Introspection.AssemblyTypesProbe": {
        "System.Reflection.Assembly[] Expressif.Functions.Introspection.AssemblyTypesProbe::get_Assemblies()": {
          "Lines": {
            "47": 104
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.Type> Expressif.Functions.Introspection.AssemblyTypesProbe::Locate()": {
          "Lines": {
            "56": 52,
            "57": 52,
            "58": 16692,
            "59": 52
          },
          "Branches": [
            {
              "Line": 58,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 15704
            },
            {
              "Line": 58,
              "Offset": 6,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 936
            }
          ]
        },
        "System.Void Expressif.Functions.Introspection.AssemblyTypesProbe::.ctor()": {
          "Lines": {
            "49": 52,
            "50": 52
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Introspection.AssemblyTypesProbe::.ctor(System.Reflection.Assembly[])": {
          "Lines": {
            "52": 0,
            "53": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Introspection\\DocumentationExtensions.cs": {
      "Expressif.Functions.Introspection.CtorInfo": {
        "Expressif.Functions.Introspection.ParamInfo[] Expressif.Functions.Introspection.CtorInfo::get_Parameters()": {
          "Lines": {
            "12": 45654
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Introspection.ParamInfo": {
        "System.String Expressif.Functions.Introspection.ParamInfo::get_Name()": {
          "Lines": {
            "14": 114874
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Introspection.DocumentationExtensions": {
        "System.Xml.XmlElement Expressif.Functions.Introspection.DocumentationExtensions::GetDocumentation(System.Reflection.MethodInfo)": {
          "Lines": {
            "28": 0,
            "31": 0,
            "32": 0,
            "34": 0
          },
          "Branches": [
            {
              "Line": 31,
              "Offset": 60,
              "EndOffset": 62,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 60,
              "EndOffset": 98,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Xml.XmlElement Expressif.Functions.Introspection.DocumentationExtensions::GetDocumentation(System.Reflection.MemberInfo)": {
          "Lines": {
            "45": 0
          },
          "Branches": []
        },
        "System.String Expressif.Functions.Introspection.DocumentationExtensions::GetSummary(System.Reflection.MemberInfo)": {
          "Lines": {
            "53": 0
          },
          "Branches": [
            {
              "Line": 53,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 24,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 41,
              "EndOffset": 43,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 41,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Xml.XmlElement Expressif.Functions.Introspection.DocumentationExtensions::GetDocumentation(System.Type)": {
          "Lines": {
            "61": 11305
          },
          "Branches": []
        },
        "System.String Expressif.Functions.Introspection.DocumentationExtensions::GetSummary(System.Type)": {
          "Lines": {
            "69": 11305
          },
          "Branches": [
            {
              "Line": 69,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 11305
            },
            {
              "Line": 69,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 24,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 11305
            },
            {
              "Line": 69,
              "Offset": 41,
              "EndOffset": 43,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 41,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 11305
            }
          ]
        },
        "Expressif.Functions.Introspection.CtorInfo[] Expressif.Functions.Introspection.DocumentationExtensions::GetInfoConstructors(System.Type)": {
          "Lines": {
            "78": 11305,
            "80": 11305,
            "81": 6773,
            "83": 4532,
            "84": 20902,
            "86": 5919,
            "87": 5919,
            "88": 27662,
            "89": 7912,
            "90": 5919,
            "92": 4532
          },
          "Branches": [
            {
              "Line": 80,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 11305
            },
            {
              "Line": 80,
              "Offset": 15,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6773
            },
            {
              "Line": 80,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 6773
            },
            {
              "Line": 80,
              "Offset": 23,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 4532
            },
            {
              "Line": 84,
              "Offset": 188,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 5919
            },
            {
              "Line": 88,
              "Offset": 137,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 7912
            },
            {
              "Line": 88,
              "Offset": 137,
              "EndOffset": 139,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 5919
            },
            {
              "Line": 84,
              "Offset": 188,
              "EndOffset": 193,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 4532
            }
          ]
        },
        "System.Xml.XmlElement Expressif.Functions.Introspection.DocumentationExtensions::XmlFromName(System.Type,System.Char,System.String)": {
          "Lines": {
            "107": 11305,
            "108": 11305,
            "109": 11305,
            "111": 11305,
            "113": 11305,
            "115": 11305
          },
          "Branches": [
            {
              "Line": 107,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 107,
              "Offset": 6,
              "EndOffset": 79,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 11305
            }
          ]
        },
        "System.Xml.XmlElement[] Expressif.Functions.Introspection.DocumentationExtensions::XmlFromPattern(System.Type,System.Char,System.String)": {
          "Lines": {
            "128": 11305,
            "129": 11305,
            "130": 11305,
            "132": 11305,
            "134": 11305,
            "136": 11305
          },
          "Branches": [
            {
              "Line": 128,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 11305
            },
            {
              "Line": 128,
              "Offset": 6,
              "EndOffset": 79,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Xml.XmlDocument Expressif.Functions.Introspection.DocumentationExtensions::XmlFromAssembly(System.Reflection.Assembly)": {
          "Lines": {
            "158": 22610,
            "159": 0,
            "163": 22610,
            "164": 1,
            "166": 22610,
            "168": 0,
            "170": 0,
            "171": 0,
            "173": 22610
          },
          "Branches": [
            {
              "Line": 158,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 158,
              "Offset": 13,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 22610
            },
            {
              "Line": 163,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 163,
              "Offset": 29,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 22610
            }
          ]
        },
        "System.Xml.XmlDocument Expressif.Functions.Introspection.DocumentationExtensions::XmlFromAssemblyNonCached(System.Reflection.Assembly)": {
          "Lines": {
            "182": 1,
            "184": 1,
            "190": 1,
            "191": 1,
            "192": 0,
            "194": 0,
            "197": 1,
            "198": 1,
            "199": 1,
            "203": 0
          },
          "Branches": [
            {
              "Line": 184,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 184,
              "Offset": 13,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Expressif.Functions.Introspection.DocumentationExtensions::.cctor()": {
          "Lines": {
            "142": 1,
            "147": 1
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Introspection\\FunctionInfo.cs": {
      "Expressif.Functions.Introspection.FunctionInfo": {
        "System.String Expressif.Functions.Introspection.FunctionInfo::get_Name()": {
          "Lines": {
            "11": 10692
          },
          "Branches": []
        },
        "System.Boolean Expressif.Functions.Introspection.FunctionInfo::get_IsPublic()": {
          "Lines": {
            "12": 8181
          },
          "Branches": []
        },
        "System.String[] Expressif.Functions.Introspection.FunctionInfo::get_Aliases()": {
          "Lines": {
            "13": 24900
          },
          "Branches": []
        },
        "System.String Expressif.Functions.Introspection.FunctionInfo::get_Scope()": {
          "Lines": {
            "14": 8343
          },
          "Branches": []
        },
        "System.Type Expressif.Functions.Introspection.FunctionInfo::get_ImplementationType()": {
          "Lines": {
            "15": 12612
          },
          "Branches": []
        },
        "System.String Expressif.Functions.Introspection.FunctionInfo::get_Summary()": {
          "Lines": {
            "16": 8181
          },
          "Branches": []
        },
        "Expressif.Functions.Introspection.ParameterInfo[] Expressif.Functions.Introspection.FunctionInfo::get_Parameters()": {
          "Lines": {
            "17": 8181
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Introspection.FunctionInfo::.ctor(System.String,System.Boolean,System.String[],System.String,System.Type,System.String,Expressif.Functions.Introspection.ParameterInfo[])": {
          "Lines": {
            "9": 8181,
            "10": 8181,
            "18": 8181
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Introspection.ParameterInfo": {
        "System.String Expressif.Functions.Introspection.ParameterInfo::get_Name()": {
          "Lines": {
            "22": 7912
          },
          "Branches": []
        },
        "System.Boolean Expressif.Functions.Introspection.ParameterInfo::get_Optional()": {
          "Lines": {
            "23": 7912
          },
          "Branches": []
        },
        "System.String Expressif.Functions.Introspection.ParameterInfo::get_Summary()": {
          "Lines": {
            "24": 7912
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Introspection.ParameterInfo::.ctor(System.String,System.Boolean,System.String)": {
          "Lines": {
            "20": 7912,
            "21": 7912,
            "25": 7912
          },
          "Branches": []
        }
      }
    },
    "C:\\projects\\expressif\\Expressif\\Functions\\Introspection\\FunctionIntrospector.cs": {
      "Expressif.Functions.Introspection.FunctionIntrospector": {
        "System.Collections.Generic.IEnumerable`1<Expressif.Functions.Introspection.FunctionInfo> Expressif.Functions.Introspection.FunctionIntrospector::Locate()": {
          "Lines": {
            "20": 30
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Introspection.FunctionIntrospector::.ctor()": {
          "Lines": {
            "13": 60
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Introspection.FunctionIntrospector::.ctor(System.Reflection.Assembly[])": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Void Expressif.Functions.Introspection.FunctionIntrospector::.ctor(Expressif.Functions.Introspection.ITypesProbe)": {
          "Lines": {
            "17": 60
          },
          "Branches": []
        }
      },
      "Expressif.Functions.Introspection.FunctionIntrospector/<Locate>d__4`1": {
        "System.Boolean Expressif.Functions.Introspection.FunctionIntrospector/<Locate>d__4`1::MoveNext()": {
          "Lines": {
            "24": 101,
            "26": 16564,
            "28": 8181,
            "29": 8181,
            "30": 8181,
            "31": 8181,
            "32": 8181,
            "33": 8181,
            "34": 8181,
            "35": 8181,
            "36": 8181,
            "37": 8181,
            "38": 8181,
            "39": 8181,
            "40": 8181,
            "41": 8181,
            "42": 8181,
            "44": 101
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 493,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 8181
            },
            {
              "Line": 28,
              "Offset": 125,
              "EndOffset": 127,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4848
            },
            {
              "Line": 28,
              "Offset": 125,
              "EndOffset": 149,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6464
            },
            {
              "Line": 28,
              "Offset": 144,
              "EndOffset": 149,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 6464
            },
            {
              "Line": 28,
              "Offset": 183,
              "EndOffset": 185,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 3131
            },
            {
              "Line": 28,
              "Offset": 183,
              "EndOffset": 226,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 3333
            },
            {
              "Line": 28,
              "Offset": 144,
              "EndOffset": 375,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1717
            },
            {
              "Line": 26,
              "Offset": 493,
              "EndOffset": 498,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 101
            }
          ]
        }
      }
    }
  }
}